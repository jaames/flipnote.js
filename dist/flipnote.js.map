{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f525bf941a2a18e70e7a","webpack:///./utils/dataStream.js","webpack:///./webgl/canvas.js","webpack:///./flipnote.js","webpack:///./player/index.js","webpack:///./parser/index.js","webpack:///./parser/ppm.js","webpack:///./utils/adpcm.js","webpack:///./parser/kwz.js","webpack:///./loader/index.js","webpack:///./loader/urlLoader.js","webpack:///./loader/fileLoader.js","webpack:///./loader/arrayBufferLoader.js","webpack:///./player/audio.js","webpack:///./encoders/wav.js"],"names":["dataStream","arrayBuffer","buffer","_data","DataView","_offset","offset","whence","byteLength","val","getUint8","value","setUint8","getInt8","setInt8","littleEndian","getUint16","setUint16","getInt16","setInt16","getUint32","setUint32","getInt32","setInt32","count","reverse","bytes","Uint8Array","hex","i","length","push","toString","padStart","join","toUpperCase","chars","str","char","String","fromCharCode","string","charCodeAt","writeUint8","Uint16Array","webglCanvas","el","width","height","params","antialias","gl","getContext","program","createProgram","refs","shaders","textures","buffers","vShader","_createShader","VERTEX_SHADER","vertexShader","fShader","FRAGMENT_SHADER","fragmentShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","Error","getProgramInfoLog","deleteProgram","useProgram","vertBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","tex","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","uniform1i","getUniformLocation","setFilter","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","encoderOptions","toDataURL","filter","LINEAR","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","color","uniform4f","clearColor","color1","color2","depth","texImage2D","ALPHA","UNSIGNED_BYTE","setColor","drawArrays","TRIANGLES","viewport","clear","COLOR_BUFFER_BIT","forEach","texture","deleteTexture","deleteBuffer","canvas","module","exports","version","player","ppmPlayer","flipnotePlayer","document","querySelector","_imgCanvas","createElement","preserveDrawingBuffer","_isOpen","_events","loop","currentFrame","paused","audioTracks","audioTrack","smoothRendering","note","parser","meta","frameCount","frameSpeed","fileLength","hasAudioTrack","set","decodeAudio","_audiorate","_seFlags","decodeSoundFlags","_playbackLoop","_hasPlaybackStarted","layerVisiblity","setFrame","thumbFrameIndex","emit","close","then","_load","catch","err","console","error","pause","_frame","unset","destroy","index","flags","active","start","currentTime","stop","_playBgm","setInterval","clearInterval","_stopAudio","firstFrame","_playFrameSe","nextFrame","framerate","setSize","Math","max","min","drawFrame","toImage","floor","_playbackFrameTime","frameIndex","colors","getFramePalette","layerBuffers","decodeFrame","setPaperColor","drawLayer","resize","eventType","callback","events","callbackList","splice","indexOf","args","apply","duration","round","audio","volume","muted","bgmrate","data","magic","ppmParser","kwzParser","FRAMERATES","WIDTH","HEIGHT","BLACK","WHITE","BLUE","RED","seek","_frameDataLength","readUint32","_soundDataLength","readUint16","offsetTableLength","_frameOffsets","Uint32Array","map","_decodeSoundHeader","_decodeMeta","_layers","_prevLayers","_prevFrameIndex","readHex","readUtf8","unpacked","byteOffset","byte","readUint8","bitOffset","lock","thumbIndex","readInt16","rootAuthorName","readUtf16","parentAuthorName","currentAuthorName","parentAuthorId","currentAuthorId","parentFilename","readFilename","currentFilename","rootAuthorId","timestamp","Date","frame_count","frame_speed","bgm_speed","bgmSpeed","thumb_index","spinoff","root","filename","username","fsid","parent","current","bgmLen","se1Len","se2Len","se3Len","soundMeta","header","paperColor","pen","isNewFrame","isTranslated","translateX","translateY","fill","readInt8","layerEncoding","readLineEncoding","layer","layerBitmap","line","chunkOffset","lineType","lineHeader","chunk","pixel","dest","src","y","x","trackIndex","id","track","arr","Array","test","decodeAdpcm","indexTable","stepSizeTable","statePrevSample","statePrevIndex","inputBuffer","outputBuffer","Int16Array","outputOffset","inputOffset","decodeSample","sample","predSample","step","difference","clamp","num","PALETTE","_table1","_table2","_table3","values","a","b","c","d","_linetable","e","f","g","h","_bitIndex","_bitValue","load","sections","size","sectionCount","sectionMagic","substring","sectionLength","frameMeta","frameOffsets","frame","layerSize","frameAuthor","layerDepth","soundFlags","cameraFlag","_prevDecodedFrame","nextBits","mask","result","creationTimestamp","modifiedTimestamp","appVersion","rootFilename","layerFlags","creation_timestamp","diffingFlag","isPrevFrame","getDiffingFlag","layerIndex","skip","tileOffsetY","tileOffsetX","subTileOffsetY","subTileOffsetX","pixelOffset","pixelBuffer","readBits","lineIndex","pixels","subarray","lineValue","lineIndexA","lineIndexB","warn","pattern","useTable","layers","image","loaders","urlLoader","fileLoader","arrayBufferLoader","Promise","resolve","reject","loader","matches","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","response","statusText","send","File","reader","FileReader","onload","event","target","onerror","readAsArrayBuffer","ArrayBuffer","channelCount","bitsPerSample","sampleRate","playbackRate","preload","pcmData","wav","wavEncoder","writeFrames","url","window","URL","createObjectURL","getBlob","revokeObjectURL","play","channels","headerBuffer","writeUtf8","writeUint32","writeUint16","Blob"],"mappings":"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","file":"flipnote.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flipnote\"] = factory();\n\telse\n\t\troot[\"flipnote\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f525bf941a2a18e70e7a","/** datastream serves as a wrapper around the DataView API to help keep track of the offset into the stream */\nexport default class dataStream {\n  /**\n  * Create a fileReader instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    this.buffer = arrayBuffer;\n    this._data = new DataView(arrayBuffer);\n    this._offset = 0;\n  }\n\n  /**\n  * Get the length of the stream\n  * @returns {number}\n  */\n  get byteLength() {\n    return this._data.byteLength;\n  }\n\n  /**\n  * based on the seek method from Python's file objects - https://www.tutorialspoint.com/python/file_seek.htm\n  * @param {number} offset - position of the read pointer within the stream\n  * @param {number} whence - (optional) defaults to absolute file positioning,\n  *                          1 = offset is relative to the current position\n  *                          2 = offset is relative to the stream's end\n  */\n  seek(offset, whence) {\n    switch (whence) {\n      case 2:\n        this._offset = this._data.byteLength + offset;\n        break;\n      case 1:\n        this._offset += offset;\n        break;\n      case 0:\n      default:\n        this._offset = offset;\n        break;\n    }\n  }\n\n  /**\n  * Read an unsigned 8-bit integer from the stream, and automatically increment the offset\n  * @returns {number}\n  */\n  readUint8() {\n    var val = this._data.getUint8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Write an unsigned 8-bit integer to the stream, and automatically increment the offset\n  * @param {number} value - value to write\n  */\n  writeUint8(value) {\n    this._data.setUint8(this._offset, value);\n    this._offset += 1;\n  }\n\n  /**\n  * Read a signed 8-bit integer from the stream, and automatically increment the offset\n  * @returns {number}\n  */\n  readInt8() {\n    var val = this._data.getInt8(this._offset);\n    this._offset += 1;\n    return val;\n  }\n\n  /**\n  * Write a signed 8-bit integer to the stream, and automatically increment the offset\n  * @param {number} value - value to write\n  */\n  writeInt8(value) {\n    this._data.setInt8(this._offset, value);\n    this._offset += 1;\n  }\n\n  /**\n  * Read an unsigned 16-bit integer from the stream, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint16(littleEndian=true) {\n    var val = this._data.getUint16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Write an unsigned 16-bit integer to the stream, and automatically increment the offset\n  * @param {number} value - value to write\n  * @param {boolean} littleEndian - defaults to true, set to false to write data in big endian byte order\n  */\n  writeUint16(value, littleEndian=true) {\n    this._data.setUint16(this._offset, value, littleEndian);\n    this._offset += 2;\n  }\n\n  /**\n  * Read a signed 16-bit integer from the stream, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt16(littleEndian=true) {\n    var val = this._data.getInt16(this._offset, littleEndian);\n    this._offset += 2;\n    return val;\n  }\n\n  /**\n  * Write a signed 16-bit integer to the stream, and automatically increment the offset\n  * @param {number} value - value to write\n  * @param {boolean} littleEndian - defaults to true, set to false to write data in big endian byte order\n  */\n  writeInt16(value, littleEndian=true) {\n    this._data.setInt16(this._offset, value, littleEndian);\n    this._offset += 2;\n  }\n\n  /**\n  * Read an unsigned 32-bit integer from the stream, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readUint32(littleEndian=true) {\n    var val = this._data.getUint32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n\n  /**\n  * Write an unsigned 32-bit integer to the stream, and automatically increment the offset\n  * @param {number} value - value to write\n  * @param {boolean} littleEndian - defaults to true, set to false to write data in big endian byte order\n  */\n  writeUint32(value, littleEndian=true) {\n    this._data.setUint32(this._offset, value, littleEndian);\n    this._offset += 4;\n  }\n\n  /**\n  * Read a signed 32-bit integer from the stream, and automatically increment the offset\n  * @param {boolean} littleEndian - defaults to true, set to false to read data in big endian byte order\n  * @returns {number}\n  */\n  readInt32(littleEndian=true) {\n    var val = this._data.getInt32(this._offset, littleEndian);\n    this._offset += 4;\n    return val;\n  }\n\n  /**\n  * Write a signed 32-bit integer to the stream, and automatically increment the offset\n  * @param {number} value - value to write\n  * @param {boolean} littleEndian - defaults to true, set to false to write data in big endian byte order\n  */\n  writeInt32(value, littleEndian=true) {\n    this._data.setInt32(this._offset, value, littleEndian);\n    this._offset += 4;\n  }\n\n\n  /**\n  * Read bytes and return a hex string\n  * @param {number} count - number of bytes to read\n  * @param {bool} reverse - pass true to reverse byte order\n  * @returns {string}\n  */\n  readHex(count, reverse=false) {\n    var bytes = new Uint8Array(this._data.buffer, this._offset, count);\n    this._offset += bytes.byteLength;\n    let hex = [];\n    for (let i = 0; i < bytes.length; i++) {\n      hex.push(bytes[i].toString(16).padStart(2, \"0\"));\n    }\n    if (reverse) hex.reverse();\n    return hex.join(\"\").toUpperCase();\n  }\n\n  /**\n  * Read (simple) utf8 string\n  * @param {number} count - number of characters to read\n  * @returns {string}\n  */\n  readUtf8(count) {\n    var chars = new Uint8Array(this._data.buffer, this._offset, count);\n    this._offset += chars.byteLength;\n    var str = \"\";\n    for (let i = 0; i < chars.length; i++) {\n      let char = chars[i];\n      if (char == 0) break;\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  /**\n  * Write (simple) utf8 string\n  * @param {string} string - string to write\n  */\n  writeUtf8(string) {\n    for (let i = 0; i < string.length; i++) {\n      let char = string.charCodeAt(i);\n      this.writeUint8(char);\n    }\n  }\n\n  /**\n  * Read (simple) utf16 string\n  * @param {number} count - number of characters to read\n  * @returns {string}\n  */\n  readUtf16(count) {\n    var chars = new Uint16Array(this._data.buffer, this._offset, count);\n    this._offset += chars.byteLength;\n    var str = \"\";\n    for (let i = 0; i < chars.length; i++) {\n      let char = chars[i];\n      if (char == 0) break;\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./utils/dataStream.js","import vertexShader from \"./vertexShader.glsl.js\";\nimport fragmentShader from \"./fragmentShader.glsl.js\";\n\n/** webgl canvas wrapper class */\nexport default class webglCanvas {\n  /**\n  * Create a rendering canvas\n  * @param {HTMLCanvasElement} el - The HTML canvas element\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  * @param {Object} params - optional params to pass to web gl context\n  */\n  constructor(el, width=640, height=480, params={antialias: false}) {\n    this.width = el.width = width;\n    this.height = el.height = height; \n    var gl = el.getContext(\"webgl\", params);\n    var program = gl.createProgram();\n    this.program = program;\n    this.el = el;\n    this.gl = gl;\n    this.refs = {\n      shaders:[],\n      textures:[],\n      buffers: []\n    };\n    // set up shaders\n    var vShader = this._createShader(gl.VERTEX_SHADER, vertexShader);\n    var fShader = this._createShader(gl.FRAGMENT_SHADER, fragmentShader);\n    gl.attachShader(program, vShader);\n    gl.attachShader(program, fShader);\n    // link program\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n      gl.deleteProgram(program);\n      return null;\n    }\n    // activate the program\n    gl.useProgram(program);\n    // create quad that fills the screen, this will be our drawing surface\n    var vertBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1,  1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    this.refs.buffers.push(vertBuffer);\n    // create texture to use as the layer bitmap\n    gl.activeTexture(gl.TEXTURE0);\n    var tex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.uniform1i(gl.getUniformLocation(this.program, \"u_bitmap\"), 0);\n    this.setFilter(\"nearest\");\n    this.refs.textures.push(tex);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n  * Util to compile and attach a new shader\n  * @param {shader type} type - gl.VERTEX_SHADER | gl.FRAGMENT_SHADER\n  * @param {string} source - GLSL code for the shader\n  * @returns {shader} compiled webgl shader\n  * @access protected \n  */\n  _createShader(type, source) {\n    var gl = this.gl;\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    // test if shader compilation was successful\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n      gl.deleteShader(shader);\n      return null;\n    }\n    this.refs.shaders.push(shader);\n    return shader;\n  }\n\n  /**\n  * get the canvas content as an image\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  * @returns {DataUrl}\n  */\n  toImage(type, encoderOptions) {\n    return this.el.toDataURL(type, encoderOptions);\n  }\n\n  /**\n  * Set the texture filter\n  * @param {string} filter - \"linear\" | \"nearest\"\n  */\n  setFilter(filter) {\n    var gl = this.gl;\n    filter = filter == \"linear\" ? gl.LINEAR : gl.NEAREST;\n    gl.activeTexture(gl.TEXTURE0);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  }\n\n  /**\n  * Set a color\n  * @param {string} color - name of the color's uniform variable\n  * @param {array} value - r,g,b color, each channel's value should be between 0 and 255\n  */\n  setColor(color, value) {\n    this.gl.uniform4f(this.gl.getUniformLocation(this.program, color), value[0]/255, value[1]/255, value[2]/255, 1);\n  }\n\n  /**\n  * Set an palette individual color\n  * @param {array} value - r,g,b,a color, each channel's value should be between 0 and 255\n  */\n  setPaperColor(value) {\n    this.gl.clearColor(value[0]/255, value[1]/255, value[2]/255, value[3]/255);\n  }\n\n  /**\n  * Draw a single frame layer\n  * @param {Uint16Array} buffer - layer pixels\n  * @param {number} width - layer width\n  * @param {number} height - layer height\n  * @param {array} color1 - r,g,b for layer color 1, each channel's value should be between 0 and 255\n  * @param {array} color2 - r,g,b for layer color 2, each channel's value should be between 0 and 255\n  * @param {number} depth - layer depth (kwz only, but currently unused)\n  */\n  drawLayer(buffer, width, height, color1, color2, depth) {\n    let gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, width, height, 0, gl.ALPHA, gl.UNSIGNED_BYTE, buffer);\n    // gl.uniform1f(gl.getUniformLocation(this.program, \"u_layerDepth\"), -depth/6);\n    this.setColor(\"u_color1\", color1);\n    this.setColor(\"u_color2\", color2);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n  * Resize canvas\n  * @param {number} width - width of the canvas in pixels\n  * @param {number} height - height of the canvas in pixels\n  */\n  resize(width=640, height=480) {\n    this.el.width = width;\n    this.el.height = height; \n    this.width = width;\n    this.height = height;\n    this.gl.viewport(0, 0, width, height);\n  }\n\n  /**\n  * Clear canvas\n  */\n  clear() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  /** \n  * Destroy this canvas instance\n  */\n  destroy() {\n    // free resources\n    var refs = this.refs;\n    var gl = this.gl;\n    refs.shaders.forEach((shader) => {\n      gl.deleteShader(shader);\n    });\n    refs.shaders = [];\n    refs.textures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n    refs.textures = [];\n    refs.buffers.forEach((buffer) => {\n      gl.deleteBuffer(buffer);\n    });\n    refs.buffers = [];\n    gl.deleteProgram(this.program);\n    // shrink the canvas to reduce memory usage until it is garbage collected\n    gl.canvas.width = 1;\n    gl.canvas.height = 1;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./webgl/canvas.js","import ppmPlayer from \"./player\";\n// import decoder from \"./decoder\";\n\nmodule.exports = {\n  version: VERSION,\n  player: ppmPlayer,\n  // decoder: decoder,\n};\n\n\n// WEBPACK FOOTER //\n// ./flipnote.js","import canvas from \"webgl/canvas\";\nimport parser from \"parser\";\nimport loader from \"loader\";\nimport audioTrack from \"./audio\";\nimport webglCanvas from \"../webgl/canvas\";\n\n/** flipnote player API, based on HTMLMediaElement (https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) */ \nexport default class flipnotePlayer {\n  /**\n  * Create new flipnote player\n  * @param {string | HTMLCanvasElement} el - HTML Canvas Element to use, or CSS selector for one\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  constructor(el, width, height) {\n    // if `el` is a string, use it to select an Element, else assume it's an element\n    el = (\"string\" == typeof el) ? document.querySelector(el) : el;\n    this.canvas = new canvas(el, width, height);\n    this._imgCanvas = new canvas(document.createElement(\"canvas\"), width, height, {\n      antialias: true,\n      preserveDrawingBuffer: true,\n    });\n    this._isOpen = false;\n    this._events = {};\n    this.loop = false;\n    this.currentFrame = 0;\n    this.paused = true;\n    this.audioTracks = [\n      new audioTrack(\"se1\"),\n      new audioTrack(\"se2\"),\n      new audioTrack(\"se3\"),\n      new audioTrack(\"bgm\"),\n    ];\n    this.smoothRendering = false;\n  }\n\n  /**\n  * Get the index of the current frame \n  */\n  get currentFrame() {\n    return this._frame;\n  }\n\n  /**\n  * Set the current frame\n  */\n  set currentFrame(index) {\n    this.setFrame(index);\n  }\n\n  /**\n  * Get current playback time in seconds\n  */\n  get currentTime() {\n    return this._isOpen ? this.currentFrame * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Set current playback time in seconds\n  */\n  set currentTime(value) {\n    if ((this._isOpen) && (value < this.duration) && (value > 0)) {\n      this.setFrame(Math.round(value / (1 / this.framerate)));\n    }\n  }\n\n  /**\n  * Get audio volume\n  */\n  get volume() {\n    return this.audioTracks[3].audio.volume;\n  }\n\n  /**\n  * Set audio volume\n  */\n  set volume(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.volume = value;\n    }\n  }\n\n  /**\n  * Get audio mute\n  */\n  get muted() {\n    return this.audioTracks[3].audio.muted;\n  }\n\n  /**\n  * Set audio mute\n  */\n  set muted(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.muted = value;\n    }\n  }\n\n  /**\n  * Get the duration of the Flipnote in seconds\n  */\n  get duration() {\n    return this._isOpen ? this.frameCount * (1 / this.framerate) : null;\n  }\n\n  /**\n  * Get the Flipnote framerate in frames-per-second\n  */\n  get framerate() {\n    return this.note.framerate;\n  }\n\n  /**\n  * Get the audio playback rate by comparing audio and frame speeds\n  * @access protected\n  */\n  get _audiorate() {\n    return (1 / this.note.bgmrate) / (1 / this.note.framerate);\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {ArrayBuffer} buffer - ppm data\n  * @access protected\n  */\n  _load(buffer) {\n    var note = new parser(buffer);\n    this.note = note;\n    this.meta = note.meta;\n    this.type = note.type;\n    this.frameCount = note.frameCount;\n    this.frameSpeed = note.frameSpeed;\n    this.fileLength = note.byteLength;\n    this.loop = note.meta.loop == 1;\n    this.paused = true;\n    this._isOpen = true;\n    if (this.note.hasAudioTrack(1)) this.audioTracks[0].set(this.note.decodeAudio(\"se1\"), 1);\n    if (this.note.hasAudioTrack(2)) this.audioTracks[1].set(this.note.decodeAudio(\"se2\"), 1);\n    if (this.note.hasAudioTrack(3)) this.audioTracks[2].set(this.note.decodeAudio(\"se3\"), 1);\n    if (this.note.hasAudioTrack(0)) this.audioTracks[3].set(this.note.decodeAudio(\"bgm\"), this._audiorate);\n    this._seFlags = this.note.decodeSoundFlags();\n    this._playbackLoop = null;\n    this._hasPlaybackStarted = false;\n    this.layerVisiblity = {\n      1: true,\n      2: true,\n      3: true\n    };\n    this.setFrame(this.note.thumbFrameIndex);\n    this.emit(\"load\");\n  }\n\n  /**\n  * Load a Flipnote into the player\n  * @param {String} source - ppm url\n  */\n  open(source) {\n    if (this._isOpen) this.close();\n    return loader(source)\n      .then((buffer) => {\n        this._load(buffer);\n      })\n      .catch((err) => {\n        console.error(\"Error loading Flipnote:\", err);\n      });\n  }\n\n  /**\n  * Close the currently loaded Flipnote and clear the player canvas\n  */\n  close() {\n    this.pause();\n    this.note = null;\n    this._isOpen = false;\n    this.paused = true;\n    this.loop = null;\n    this.meta = null;\n    this.frameCount = null;\n    this.frameSpeed = null;\n    this._frame = 0;\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].unset();\n    }\n    this._seFlags = null;\n    this._hasPlaybackStarted = null;\n    this.canvas.clear();\n    this._imgCanvas.clear();\n  }\n\n  /**\n  * Destroy this player instance cleanly\n  */\n  destroy() {\n    this.close();\n    this.canvas.destroy();\n    this._imgCanvas.destroy();\n  }\n\n  /**\n  * Play the sound effects for a given frame\n  * @param {number} index - zero-based frame index\n  * @access protected\n  */\n  _playFrameSe(index) {\n    var flags = this._seFlags[index];\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] && this.audioTracks[i].active) this.audioTracks[i].start();\n    }\n  }\n\n  /**\n  * Play the Flipnote BGM\n  * @access protected\n  */\n  _playBgm() {\n    this.audioTracks[3].start(this.currentTime);\n  }\n\n  /**\n  * Stop all audio tracks\n  * @access protected\n  */\n  _stopAudio() {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].stop();\n    }\n  }\n\n  /**\n  * Begin Flipnote playback\n  */\n  play() {\n    if ((!this._isOpen) || (!this.paused)) return null;\n    this.paused = false;\n    if ((!this._hasPlaybackStarted) || ((!this.loop) && (this.currentFrame == this.frameCount - 1))) this._frame = 0;\n    this._playBgm();\n    this._playbackLoop = setInterval(() => {\n      if (this.paused) clearInterval(this._playbackLoop);\n      // if the end of the flipnote has been reached\n      if (this.currentFrame >= this.frameCount -1) {\n        this._stopAudio();\n        if (this.loop) {\n          this.firstFrame();\n          this._playBgm(0);\n          this.emit(\"playback:loop\");\n        } else {\n          this.pause();\n          this.emit(\"playback:end\");\n        }\n      } else {\n        this._playFrameSe(this.currentFrame);\n        this.nextFrame();\n      }\n    }, 1000 / this.framerate);\n    this._hasPlaybackStarted = true;\n    this.emit(\"playback:start\");\n  }\n\n  /**\n  * Pause Flipnote playback\n  */\n  pause() {\n    if ((!this._isOpen) || (this.paused)) return null;\n    // break the playback loop\n    clearInterval(this._playbackLoop);\n    this.paused = true;\n    this._stopAudio();\n    this.emit(\"playback:stop\");\n  }\n\n  /**\n  * Get a specific frame as an image data URL\n  * @param {number|string} index - zero-based frame index, or pass \"thumb\" to get the thumbnail frame\n  * @param {string} type - image MIME type, default is image/png\n  * @param {number} encoderOptions - number between 0 and 1 indicating image quality if type is image/jpeg or image/webp\n  */\n  getFrameImage(index, width, height, type, encoderOptions) {\n    if (!this._isOpen) return null;\n    var canvas = this._imgCanvas;\n    if (canvas.width !== width || canvas.height !== height) canvas.setSize(width, height);\n    // clamp frame index\n    index = (index == \"thumb\") ? (this.note.thumbFrameIndex) : (Math.max(0, Math.min(index, this.frameCount - 1)));\n    this.drawFrame(index, canvas);\n    return canvas.toImage(type, encoderOptions);\n  }\n\n  /**\n  * Jump to a specific frame\n  * @param {number} index - zero-based frame index\n  */\n  setFrame(index) {\n    if ((!this._isOpen) || (index === this.currentFrame)) return null;\n    // clamp frame index\n    index = Math.max(0, Math.min(Math.floor(index), this.frameCount - 1));\n    this._frame = index;\n    this._playbackFrameTime = 0;\n    this.drawFrame(index, this.canvas);\n    this.emit(\"frame:update\", this.currentFrame);\n  }\n\n  /**\n  * Draw a frame to a given canvas\n  * @param {number} index - zero-based frame index\n  * @param {webglCanvas} canvas - webgl frame canvas\n  */\n  drawFrame(frameIndex, canvas) {\n    let colors = this.note.getFramePalette(frameIndex);\n    let layerBuffers = this.note.decodeFrame(frameIndex);\n    canvas.setPaperColor(colors[0]);\n    canvas.clear();\n    if (this.note.type == \"PPM\") {\n      if (this.layerVisiblity[2]) canvas.drawLayer(layerBuffers[1], 256, 192, colors[2], [0,0,0,0]);\n      if (this.layerVisiblity[1]) canvas.drawLayer(layerBuffers[0], 256, 192, colors[1], [0,0,0,0]);\n    } else if (this.note.type == \"KWZ\") {\n      if (this.layerVisiblity[3]) canvas.drawLayer(layerBuffers[2], 320, 240, colors[5], colors[6]);\n      if (this.layerVisiblity[2]) canvas.drawLayer(layerBuffers[1], 320, 240, colors[3], colors[4]);\n      if (this.layerVisiblity[1]) canvas.drawLayer(layerBuffers[0], 320, 240, colors[1], colors[2]);\n    }\n    \n  }\n\n  /**\n  * Jump to the thumbnail frame\n  */\n  thumbnailFrame() {\n    this.currentFrame = this.note.thumbFrameIndex;\n  }\n\n  /**\n  * Jump to the next frame in the animation\n  */\n  nextFrame() {\n    if ((this.loop) && (this.currentFrame >= this.frameCount -1)) {\n      this.currentFrame = 0;\n    } else {\n      this.currentFrame += 1;\n    }\n  }\n\n  /**\n  * Jump to the previous frame in the animation\n  */\n  prevFrame() {\n    if ((this.loop) && (this.currentFrame <= 0)) {\n      this.currentFrame = this.frameCount - 1;\n    } else {\n      this.currentFrame -= 1;\n    }\n  }\n\n  /**\n  * Jump to the last frame in the animation\n  */\n  lastFrame() {\n    this.currentFrame = this.frameCount - 1;\n  }\n\n  /**\n  * Jump to the first frame in the animation\n  */\n  firstFrame() {\n    this.currentFrame = 0;\n  }\n\n  /**\n  * Resize player canvas\n  * @param {number} width - canvas width in pixels\n  * @param {number} height - canvas height in pixels\n  */\n  resize(width, height) {\n    this.canvas.resize(width, height);\n  }\n\n  /**\n  * Set layer visibility\n  * @param {number} index - layer number = 1, 2, 3\n  * @param {boolean} value\n  */\n  setLayerVisibility(index, value) {\n    this.layerVisiblity[index] = value;\n    this.drawFrame(this.currentFrame, this.canvas);\n  }\n\n  /**\n  * Set smooth rendering\n  * @param {boolean} value\n  */\n  setSmoothRendering(value) {\n    if (this.type == \"KWZ\") { // kwz doesn't supper linear fltering yet\n      var filter = \"nearest\";\n    } else {\n      var filter = value ? \"linear\" : \"nearest\";\n    }\n    this.canvas.setFilter(filter);\n    this.drawFrame(this.currentFrame, this.canvas);\n    this.smoothRendering = value;\n  }\n\n  /**\n  * Register an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  on(eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  }\n\n  /**\n  * Remove an event callback\n  * @param {string} eventType - event type\n  * @param {function} callback - event callback function\n  */\n  off(eventType, callback) {\n    var callbackList = this._events[eventType];\n    if (callbackList) callbackList.splice(callbackList.indexOf(callback), 1);\n  }\n\n  /**\n  * Emit an event (used internally)\n  * @param {string} eventType - event type\n  * @param {...} args - arguments to be passed to event callback\n  */\n  emit(eventType, ...args) {\n    var callbackList = this._events[eventType] || [];\n    for (var i = 0; i < callbackList.length; i++) {\n      callbackList[i].apply(null, args); \n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./player/index.js","import ppmParser from \"./ppm\";\nimport kwzParser from \"./kwz\";\n\nexport default function parser(arrayBuffer) {\n  // check the buffer's magic to identify which format it uses\n  let data = new DataView(arrayBuffer, 0, 4);\n  let magic = data.getUint32(0);\n  // check if magic is PARA (ppm magic)\n  if (magic == 0x50415241) {\n    return new ppmParser(arrayBuffer);\n  } \n  // check if magic is KFH (kwz magic)\n  else if ((magic & 0xFFFFFF00) == 0x4B464800) {\n    return new kwzParser(arrayBuffer);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./parser/index.js","/**\n * PPM decoder\n * Reads frames, audio, and metadata from Flipnote Studio PPM files \n * Based on my Python PPM decoder implementation (https://github.com/jaames/flipnote-tools)\n *  \n * Credits:\n *  PPM format reverse-engineering and documentation:\n *   - bricklife (http://ugomemo.g.hatena.ne.jp/bricklife/20090307/1236391313)\n *   - mirai-iro (http://mirai-iro.hatenablog.jp/entry/20090116/ugomemo_ppm)\n *   - harimau_tigris (http://ugomemo.g.hatena.ne.jp/harimau_tigris)\n *   - steven (http://www.dsibrew.org/wiki/User:Steven)\n *   - yellows8 (http://www.dsibrew.org/wiki/User:Yellows8)\n *   - PBSDS (https://github.com/pbsds)\n *   - jaames (https://github.com/jaames)\n *  Identifying the PPM sound codec:\n *   - Midmad from Hatena Haiku\n *   - WDLMaster from hcs64.com\n *  Helping me to identify issues with the Python decoder that this is based on:\n *   - Austin Burk (https://sudomemo.net)\n * \n *  Lastly, a huge thanks goes to Nintendo for creating Flipnote Studio, \n *  and to Hatena for providing the Flipnote Hatena online service, both of which inspired so many c:\n*/\n\nimport dataStream from \"utils/dataStream\";\nimport {decodeAdpcm} from \"utils/adpcm\";\n\n// internal framerate value -> FPS table\nconst FRAMERATES = {\n  1: 0.5,\n  2: 1,\n  3: 2,\n  4: 4,\n  5: 6,\n  6: 12,\n  7: 20,\n  8: 30,\n};\n\nconst WIDTH = 256;\nconst HEIGHT = 192;\nconst BLACK = [0x0E, 0x0E, 0x0E];\nconst WHITE = [0xFF, 0xFF, 0xff];\nconst BLUE = [0x0A, 0x39, 0xFF];\nconst RED = [0xFF, 0x2A, 0x2A];\n\nexport default class ppmParser extends dataStream {\n  /**\n  * Create a ppmDecoder instance\n  * @param {ArrayBuffer} arrayBuffer - data to read from\n  */\n  constructor(arrayBuffer) {\n    super(arrayBuffer);\n    this.type = \"PPM\";\n    this.seek(4);\n    // decode header\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this._frameDataLength = this.readUint32();\n    this._soundDataLength = this.readUint32();\n    this.frameCount = Math.min(this.readUint16() + 1, 999);\n    this.seek(18);\n    this.thumbFrameIndex = this.readUint16();\n    // jump to the start of the animation data section\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-data-section\n    this.seek(0x06A0);\n    var offsetTableLength = this.readUint16();\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    this._frameOffsets = new Uint32Array(offsetTableLength / 4).map(value => {\n      return 0x06A8 + offsetTableLength + this.readUint32();\n    });\n    this._decodeSoundHeader();\n    this.meta = this._decodeMeta();\n    // create image buffers\n     this._layers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevLayers = [\n      new Uint8Array(WIDTH * HEIGHT),\n      new Uint8Array(WIDTH * HEIGHT)\n    ];\n    this._prevFrameIndex = 0;\n  }\n\n  static validateFSID(fsid) {\n    return /[0159]{1}[0-9A-F]{6}0[0-9A-F]{8}/.test(fsid);\n  }\n\n  static validateFilename(filename) {\n    return /[0-9A-F]{6}_[0-9A-F]{13}_[0-9]{3}/.test(filename);\n  }\n\n  /**\n  * Read a packed filename\n  * @returns {string}\n  * @access protected\n  */\n  readFilename() {\n    return [\n      this.readHex(3),\n      this.readUtf8(13),\n      this.readUint16().toString().padStart(3, \"0\")\n    ].join(\"_\");\n  }\n\n  /**\n  * Unpack the line encoding flags for all 192 lines in a layer\n  * @returns {array}\n  * @access protected\n  */\n  readLineEncoding() {\n    var unpacked = new Uint8Array(HEIGHT);\n    for (var byteOffset = 0; byteOffset < 48; byteOffset ++) {\n      var byte = this.readUint8();\n      // each line's encoding type is stored as a 2-bit value\n      for (var bitOffset = 0; bitOffset < 8; bitOffset += 2) {\n        unpacked[byteOffset * 4 + bitOffset / 2] = (byte >> bitOffset) & 0x03;\n      }\n    }\n    return unpacked;\n  }\n\n  /**\n  * Decode the main PPM metadata, like username, timestamp, etc\n  * @returns {object}\n  * @access protected\n  */\n  _decodeMeta() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this.seek(0x10);\n    var lock = this.readUint16(),\n        thumbIndex = this.readInt16(),\n        rootAuthorName = this.readUtf16(11),\n        parentAuthorName = this.readUtf16(11),\n        currentAuthorName = this.readUtf16(11),\n        parentAuthorId = this.readHex(8, true),\n        currentAuthorId = this.readHex(8, true),\n        parentFilename = this.readFilename(),\n        currentFilename = this.readFilename(),\n        rootAuthorId = this.readHex(8, true);\n    this.seek(0x9A);\n    var timestamp = new Date((this.readUint32() + 946684800) * 1000);\n    this.seek(0x06A6);\n    var flags = this.readUint16();\n    return {\n      lock: lock,\n      loop: flags >> 1 & 0x01,\n      frame_count: this.frameCount,\n      frame_speed: this.frameSpeed,\n      bgm_speed: this.bgmSpeed,\n      thumb_index: thumbIndex,\n      timestamp: timestamp,\n      spinoff: (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId),\n      root: {\n        filename: null,\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename\n      },\n    };\n  }\n\n  /**\n  * Decode the sound header to get audio track lengths and frame/bgm sppeds\n  * @access protected\n  */\n  _decodeSoundHeader() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#sound-data-section\n    // offset = frame data offset + frame data length + sound effect flags\n    var offset = 0x06A0 + this._frameDataLength + this.frameCount;\n    // account for multiple-of-4 padding\n    if (offset % 4 != 0) offset += 4 - (offset % 4);\n    this.seek(offset);\n    var bgmLen = this.readUint32();\n    var se1Len = this.readUint32();\n    var se2Len = this.readUint32();\n    var se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    offset += 32;\n    this.framerate = FRAMERATES[this.frameSpeed];\n    this.bgmrate = FRAMERATES[this.bgmSpeed];\n    this.soundMeta = {\n      \"bgm\": {offset: offset,           length: bgmLen},\n      \"se1\": {offset: offset += bgmLen, length: se1Len},\n      \"se2\": {offset: offset += se1Len, length: se2Len},\n      \"se3\": {offset: offset += se2Len, length: se3Len},\n    };\n  }\n\n  /**\n  * Check whether or not a given frame is based on the previous one\n  * @param {number} index - zero-based frame index \n  * @returns {boolean}\n  */\n  isNewFrame(index) {\n    this.seek(this._frameOffsets[index]);\n    var header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n\n  /**\n  * Get the color palette for a given frame\n  * @param {number} index - zero-based frame index \n  * @returns {array} rgba palette in order of paper, layer1, layer2\n  */\n  getFramePalette(index) {\n    this.seek(this._frameOffsets[index]);\n    var header = this.readUint8();\n    var paperColor = header & 0x1;\n    var pen = [\n      null,\n      paperColor == 1 ? BLACK : WHITE,\n      RED,\n      BLUE,\n    ];\n    return [\n      paperColor == 1 ? WHITE : BLACK,\n      pen[(header >> 1) & 0x3], // layer 1 color\n      pen[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  /**\n  * Decode a frame\n  * @param {number} index - zero-based frame index \n  * @returns {array} - 2 uint8 arrays representing each layer\n  * */\n  decodeFrame(index) {\n    if ((index !== 0) && (this._prevFrameIndex !== index - 1) && (!this.isNewFrame(index)))\n      this.decodeFrame(index - 1);\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-frame\n    this.seek(this._frameOffsets[index]);\n    var header = this.readUint8();\n    var isNewFrame = (header >> 7) & 0x1;\n    var isTranslated = (header >> 5) & 0x3;\n    var translateX = 0;\n    var translateY = 0;\n    // copy the current layer buffers to the previous ones\n    this._prevLayers[0].set(this._layers[0]);\n    this._prevLayers[1].set(this._layers[1]);\n    this._prevFrameIndex = index;\n    // reset current layer buffers\n    this._layers[0].fill(0);\n    this._layers[1].fill(0);\n\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    var layerEncoding = [\n      this.readLineEncoding(),\n      this.readLineEncoding()\n    ];\n     // start decoding layer bitmaps\n    for (var layer = 0; layer < 2; layer++) {\n      var layerBitmap = this._layers[layer];\n      for (var line = 0; line < HEIGHT; line++) {\n        var chunkOffset = line * WIDTH;\n        var lineType = layerEncoding[layer][line];\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line types 1 + 2 = compressed bitmap line\n          case 1:\n          case 2:\n            var lineHeader = this.readUint32(false);\n            // line type 2 starts as an inverted line\n            if (lineType == 2) layerBitmap.fill(1, chunkOffset, chunkOffset + WIDTH);\n            // loop through each bit in the line header\n            while (lineHeader & 0xFFFFFFFF) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                var chunk = this.readUint8();\n                // unpack chunk bits\n                for (var pixel = 0; pixel < 8; pixel++) {\n                  layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n                }\n              }\n              chunkOffset += 8;\n              // shift lineheader to the left by 1 bit, now on the next loop cycle the next bit will be checked\n              lineHeader <<= 1;\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            while(chunkOffset < (line + 1) * WIDTH) {\n              var chunk = this.readUint8();\n              for (var pixel = 0; pixel < 8; pixel++) {\n                layerBitmap[chunkOffset + pixel] = chunk >> pixel & 0x1;\n              }\n              chunkOffset += 8;\n            }\n            break;\n        }\n      }\n    }\n    // if the current frame is based on changes from the preivous one, merge them by XORing their values\n    if (!isNewFrame) {\n      var dest, src;\n      for (var y = 0; y < HEIGHT; y++) {\n        for (var x = 0; x < WIDTH; x++) {\n          dest = x + y * WIDTH;\n          src = dest - (translateX + translateY * WIDTH);\n          if (!((x - translateX > WIDTH) || (x - translateX < 0))) {\n            this._layers[0][dest] ^= this._prevLayers[0][src];\n            this._layers[1][dest] ^= this._prevLayers[1][src];\n          }\n        }\n      }\n    }\n    return this._layers;\n  }\n\n  hasAudioTrack(trackIndex) {\n    let id = [\"bgm\", \"se1\", \"se2\", \"se3\"][trackIndex];\n    return this.soundMeta[id].length > 0;\n  }\n\n  /**\n  * Decode an audio track to 32-bit adpcm\n  * @param {string} track - track name, \"bgm\" | \"se1\" | \"se2\" | \"se3\"\n  * @returns {Int16Array}\n  */\n  decodeAudio(track) {\n    let meta = this.soundMeta[track];\n    let buffer = new Uint8Array(this.buffer, meta.offset, meta.length);\n    return decodeAdpcm(buffer);\n  }\n\n  /**\n  * Decode the sound effect usage for each frame\n  * @returns {array}\n  */\n  decodeSoundFlags() {\n    this.seek(0x06A0 + this._frameDataLength);\n    // per msdn docs - the array map callback is only invoked for array indicies that have assigned values\n    // so when we create an array, we need to fill it with something before we can map over it\n    var arr = new Array(this.frameCount).fill([]);\n    return arr.map(value => {\n      var byte = this.readUint8();\n      return [byte & 0x1, (byte >> 1) & 0x1, (byte >> 2) & 0x1];\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./parser/ppm.js","/** convert 4-bit adpcm to 16-bit pcm\n *  implementation based on http://www.cs.columbia.edu/~gskc/Code/AdvancedInternetServices/SoundNoiseRatio/dvi_adpcm.c\n*/\n\nconst indexTable = [\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n];\n\nconst stepSizeTable = [\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767\n];\n\nlet statePrevSample = 0,\n    statePrevIndex = 0;\n\n/**\n* Convert 4-bit adpcm to 16-bit pcm\n* @param {Uint8Array} inputBuffer - adpcm buffer\n* @returns {Int16Array}\n*/\nexport function decodeAdpcm(inputBuffer) {\n  statePrevSample = 0;\n  statePrevIndex = 0;\n  var outputBuffer = new Int16Array(inputBuffer.length * 2);\n  var outputOffset = 0;\n  for (var inputOffset = 0; inputOffset < inputBuffer.length; inputOffset++) {\n    var byte = inputBuffer[inputOffset];\n    // note - Flipnote Studio's adpcm data uses reverse nibble order\n    outputBuffer[outputOffset] = decodeSample(byte & 0xF);\n    outputBuffer[outputOffset + 1] = decodeSample((byte >> 4) & 0xF);\n    outputOffset += 2;\n  }\n  return outputBuffer;\n};\n\n/**\n* Unpack a single adpcm 4-bit sample\n* @param {number} sample - sample value\n* @returns {number}\n* @access protected\n*/\nfunction decodeSample(sample) {\n  var predSample = statePrevSample;\n  var index = statePrevIndex;\n  var step = stepSizeTable[index];\n  var difference = step >> 3;\n\n  // compute difference and new predicted value\n  if (sample & 0x4) difference += step;\n  if (sample & 0x2) difference += (step >> 1);\n  if (sample & 0x1) difference += (step >> 2);\n  // handle sign bit\n  predSample += (sample & 0x8) ? -difference : difference;\n\n  // find new index value\n  index += indexTable[sample];\n  index = clamp(index, 0, 88);\n\n  // clamp output value\n  predSample = clamp(predSample, -32767, 32767);\n  statePrevSample = predSample;\n  statePrevIndex = index;\n  return predSample;\n};\n\n/**\n* Util to clamp a number within a given range\n* @param {number} num - input value\n* @param {number} min - minimun value\n* @param {number} max - maximum value\n* @returns {number}\n* @access protected\n*/\nfunction clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n};\n\n\n// WEBPACK FOOTER //\n// ./utils/adpcm.js","import dataStream from \"utils/dataStream\";\n\nconst FRAMERATES = [\n  0.2,\n  0.5,\n  1,\n  2,\n  4, \n  6,\n  8,\n  12, \n  20,\n  24,\n  30\n];\n\nconst PALETTE = [\n  [0xff, 0xff, 0xff],\n  [0x10, 0x10, 0x10],\n  [0xff, 0x10, 0x10],\n  [0xff, 0xe7, 0x00],\n  [0x00, 0x86, 0x31],\n  [0x00, 0x38, 0xce],\n  [0xff, 0xff, 0xff]\n];\n\nexport default class kwzParser extends dataStream {\n\n  constructor(arrayBuffer) {\n    super(arrayBuffer);\n    this.type = \"KWZ\";\n    // table1 - commonly occuring line offsets\n    this._table1 = new Uint16Array([\n      0x0000, 0x0CD0, 0x19A0, 0x02D9, 0x088B, 0x0051, 0x00F3, 0x0009,\n      0x001B, 0x0001, 0x0003, 0x05B2, 0x1116, 0x00A2, 0x01E6, 0x0012,\n      0x0036, 0x0002, 0x0006, 0x0B64, 0x08DC, 0x0144, 0x00FC, 0x0024,\n      0x001C, 0x0004, 0x0334, 0x099C, 0x0668, 0x1338, 0x1004, 0x166C\n    ]);\n    // table2 - commonly occuring line offsets, but the lines are shifted to the left by one pixel\n    this._table2 = new Uint16Array([\n      0x0000, 0x0CD0, 0x19A0, 0x0003, 0x02D9, 0x088B, 0x0051, 0x00F3, \n      0x0009, 0x001B, 0x0001, 0x0006, 0x05B2, 0x1116, 0x00A2, 0x01E6, \n      0x0012, 0x0036, 0x0002, 0x02DC, 0x0B64, 0x08DC, 0x0144, 0x00FC, \n      0x0024, 0x001C, 0x099C, 0x0334, 0x1338, 0x0668, 0x166C, 0x1004\n    ]);\n    // table3 - line offsets, but the lines are shifted to the left by one pixel\n    this._table3 = new Uint16Array(6561);\n    const values = [0, 3, 7, 1, 4, 8, 2, 5, 6];\n    let index = 0;\n    for (let a = 0; a < 9; a++)\n      for (let b = 0; b < 9; b++)\n        for (let c = 0; c < 9; c++)\n          for (let d = 0; d < 9; d++) {\n            this._table3[index] = ((values[a] * 9 + values[b]) * 9 + values[c]) * 9 + values[d];\n            index++;\n          }\n    // linetable - contains every possible sequence of pixels for each tile line\n    this._linetable = new Uint8Array(6561 * 8);\n    let offset = 0;\n    for (let a = 0; a < 3; a++)\n      for (let b = 0; b < 3; b++)\n        for (let c = 0; c < 3; c++)\n          for (let d = 0; d < 3; d++)\n            for (let e = 0; e < 3; e++)\n              for (let f = 0; f < 3; f++)\n                for (let g = 0; g < 3; g++)\n                  for (let h = 0; h < 3; h++) {\n                    this._linetable.set([b, a, d, c, f, e, h, g], offset);\n                    offset += 8;\n                  }\n\n    this._layers = [\n      new Uint8Array(320 * 240),\n      new Uint8Array(320 * 240),\n      new Uint8Array(320 * 240),\n    ];\n    this._bitIndex = 0;\n    this._bitValue = 0;\n    this.load();\n  }\n\n  load() {\n    this.seek(0);\n    this.sections = {};\n    let size = this.byteLength - 256;\n    let offset = 0;\n    let sectionCount = 0;\n    // counting sections should mitigate against one of mrnbayoh's notehax exploits\n    while ((offset < size) && (sectionCount < 6)) {\n      this.seek(offset);\n      let sectionMagic = this.readUtf8(4).substring(0, 3);\n      let sectionLength = this.readUint32();\n      this.sections[sectionMagic] = {\n        offset: offset,\n        length: sectionLength\n      };\n      offset += sectionLength + 8;\n      sectionCount += 1;\n    }\n\n    this.meta = this._decodeMeta();\n\n    this.frameMeta = [];\n    this.frameOffsets = [];\n    this.seek(this.sections[\"KMI\"].offset + 8);\n    offset = this.sections[\"KMC\"].offset + 12;\n    for (let i = 0; i < this.frameCount; i++) {\n      let frame = {\n        flags: this.readUint32(),\n        layerSize: [\n          this.readUint16(),\n          this.readUint16(),\n          this.readUint16()\n        ],\n        frameAuthor: this.readUtf8(10),\n        layerDepth: [\n          this.readUint8(),\n          this.readUint8(),\n          this.readUint8(),\n        ],\n        soundFlags: this.readUint8(),\n        cameraFlag: this.readUint32(),\n      };\n      this.frameMeta.push(frame);\n      this.frameOffsets.push(offset);\n      offset += frame.layerSize[0] + frame.layerSize[1] + frame.layerSize[2];\n    }\n    this._prevDecodedFrame = -1;\n  }\n\n  readBits(num) {\n    if (this._bitIndex + num > 16) {\n      let nextBits = this.readUint16();\n      this._bitValue |= nextBits << (16 - this._bitIndex);\n      this._bitIndex -= 16;\n    }\n    let mask = (1 << num) - 1;\n    let result = this._bitValue & mask;\n    this._bitValue >>= num;\n    this._bitIndex += num;\n    return result;\n  }\n\n  _decodeMeta() {\n    this.seek(this.sections[\"KFH\"].offset + 12);\n    let creationTimestamp = new Date((this.readUint32() + 946684800) * 1000),\n        modifiedTimestamp = new Date((this.readUint32() + 946684800) * 1000),\n        appVersion = this.readUint32(),\n        rootAuthorId = this.readHex(10),\n        parentAuthorId = this.readHex(10),\n        currentAuthorId = this.readHex(10),\n        rootAuthorName = this.readUtf16(11),\n        parentAuthorName = this.readUtf16(11),\n        currentAuthorName = this.readUtf16(11),\n        rootFilename = this.readUtf8(28),\n        parentFilename = this.readUtf8(28),\n        currentFilename = this.readUtf8(28),\n        frameCount = this.readUint16(),\n        thumbIndex = this.readUint16(),\n        flags = this.readUint16(),\n        frameSpeed = this.readUint8(),\n        layerFlags = this.readUint8();\n    this.frameCount = frameCount;\n    this.thumbFrameIndex = thumbIndex;\n    this.frameSpeed = frameSpeed;\n    this.framerate = FRAMERATES[frameSpeed];\n    return {\n      lock: flags & 0x1,\n      loop: (flags >> 1) & 0x01,\n      frame_count: frameCount,\n      frame_speed: frameSpeed,\n      thumb_index: thumbIndex,\n      timestamp: modifiedTimestamp,\n      creation_timestamp: creationTimestamp,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n        filename: rootFilename,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename,\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename,\n      },\n    };\n  }\n\n  getDiffingFlag(frameIndex) {\n    return ~(this.frameMeta[frameIndex].flags >> 4) & 0x07;\n  }\n\n  getLayerDepths(frameIndex) {\n    return this.frameMeta[frameIndex].layerDepth;\n  }\n\n  decodeFrame(frameIndex, diffingFlag=0x7, isPrevFrame=false) {\n    // if this frame is being decoded as a prev frame, then we only want to decode the layers necessary\n    if (isPrevFrame)\n      diffingFlag &= this.getDiffingFlag(frameIndex + 1);\n    // the prevDecodedFrame check is an optimisation for decoding frames in full sequence\n    if ((frameIndex !== 0) && (this._prevDecodedFrame !== frameIndex - 1) && (diffingFlag))\n      this.decodeFrame(frameIndex - 1, diffingFlag=diffingFlag, isPrevFrame=true);\n\n    let meta = this.frameMeta[frameIndex];\n    let offset = this.frameOffsets[frameIndex];\n\n    for (let layerIndex = 0; layerIndex < 3; layerIndex++) {\n      this.seek(offset);\n      let layerSize = meta.layerSize[layerIndex];\n      offset += layerSize;\n\n      // if the layer is 38 bytes then it hasn't changed at all since the previous frame, so we can skip it\n      if (layerSize === 38) continue;\n\n      if ((diffingFlag >> layerIndex) & 0x1 === 0) continue;\n\n      this._bitIndex = 16;\n      this._bitValue = 0;\n      let skip = 0;\n\n      for (let tileOffsetY = 0; tileOffsetY < 240; tileOffsetY += 128) {\n        for (let tileOffsetX = 0; tileOffsetX < 320; tileOffsetX += 128) {\n          for (let subTileOffsetY = 0; subTileOffsetY < 128; subTileOffsetY += 8) {\n            let y = tileOffsetY + subTileOffsetY;\n            if (y >= 240) break;\n\n            for (let subTileOffsetX = 0; subTileOffsetX < 128; subTileOffsetX += 8) {\n              let x = tileOffsetX + subTileOffsetX;\n              if (x >= 320) break;\n\n              if (skip) {\n                skip -= 1;\n                continue;\n              }\n\n              let pixelOffset = y * 320 + x;\n              let pixelBuffer = this._layers[layerIndex];\n\n              let type = this.readBits(3);\n\n              if (type == 0) {\n                let lineIndex = this._table1[this.readBits(5)];\n                let pixels = this._linetable.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                pixelBuffer.set(pixels, pixelOffset);\n                pixelBuffer.set(pixels, pixelOffset + 320);\n                pixelBuffer.set(pixels, pixelOffset + 640);\n                pixelBuffer.set(pixels, pixelOffset + 960);\n                pixelBuffer.set(pixels, pixelOffset + 1280);\n                pixelBuffer.set(pixels, pixelOffset + 1600);\n                pixelBuffer.set(pixels, pixelOffset + 1920);\n                pixelBuffer.set(pixels, pixelOffset + 2240);\n              } \n\n              else if (type == 1) {\n                let lineIndex = this.readBits(13);\n                let pixels = this._linetable.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                pixelBuffer.set(pixels, pixelOffset);\n                pixelBuffer.set(pixels, pixelOffset + 320);\n                pixelBuffer.set(pixels, pixelOffset + 640);\n                pixelBuffer.set(pixels, pixelOffset + 960);\n                pixelBuffer.set(pixels, pixelOffset + 1280);\n                pixelBuffer.set(pixels, pixelOffset + 1600);\n                pixelBuffer.set(pixels, pixelOffset + 1920);\n                pixelBuffer.set(pixels, pixelOffset + 2240);\n              } \n              \n              else if (type == 2) {\n                let lineValue = this.readBits(5);\n                let lineIndexA = this._table1[lineValue];\n                let lineIndexB = this._table2[lineValue];\n                let a = this._linetable.subarray(lineIndexA * 8, lineIndexA * 8 + 8);\n                let b = this._linetable.subarray(lineIndexB * 8, lineIndexB * 8 + 8);\n                pixelBuffer.set(a, pixelOffset);\n                pixelBuffer.set(b, pixelOffset + 320);\n                pixelBuffer.set(a, pixelOffset + 640);\n                pixelBuffer.set(b, pixelOffset + 960);\n                pixelBuffer.set(a, pixelOffset + 1280);\n                pixelBuffer.set(b, pixelOffset + 1600);\n                pixelBuffer.set(a, pixelOffset + 1920);\n                pixelBuffer.set(b, pixelOffset + 2240);\n              } \n              \n              else if (type == 3) {\n                let lineIndexA = this.readBits(13);\n                let lineIndexB = this._table3[lineIndexA];\n                let a = this._linetable.subarray(lineIndexA * 8, lineIndexA * 8 + 8);\n                let b = this._linetable.subarray(lineIndexB * 8, lineIndexB * 8 + 8);\n                pixelBuffer.set(a, pixelOffset);\n                pixelBuffer.set(b, pixelOffset + 320);\n                pixelBuffer.set(a, pixelOffset + 640);\n                pixelBuffer.set(b, pixelOffset + 960);\n                pixelBuffer.set(a, pixelOffset + 1280);\n                pixelBuffer.set(b, pixelOffset + 1600);\n                pixelBuffer.set(a, pixelOffset + 1920);\n                pixelBuffer.set(b, pixelOffset + 2240);\n              }\n\n              else if (type == 4) {\n                let mask = this.readBits(8);\n                for (let line = 0; line < 8; line++) {\n                  let lineIndex = 0;\n                  if (mask & (1 << line)) {\n                    lineIndex = this._table1[this.readBits(5)];\n                  } else {\n                    lineIndex = this.readBits(13);\n                  }\n                  let pixels = this._linetable.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                  pixelBuffer.set(pixels, pixelOffset + line * 320);\n                }\n              }\n\n              else if (type == 5) {\n                skip = this.readBits(5);\n                continue;\n              }\n\n              else if (type == 6) {\n                console.warn(\"type 6??? nah m8\")\n              }\n\n              else if (type == 7) {\n                let pattern = this.readBits(2);\n                let useTable = this.readBits(1);\n                let lineIndexA = 0;\n                let lineIndexB = 0;\n\n                if (useTable) {\n                  lineIndexA = this._table1[this.readBits(5)];\n                  lineIndexB = this._table1[this.readBits(5)];\n                  pattern = (pattern + 1) % 4;\n                } else {\n                  lineIndexA = this.readBits(13);\n                  lineIndexB = this.readBits(13);\n                }\n\n                let a = this._linetable.subarray(lineIndexA * 8, lineIndexA * 8 + 8);\n                let b = this._linetable.subarray(lineIndexB * 8, lineIndexB * 8 + 8);\n\n                if (pattern == 0) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(b, pixelOffset + 320);\n                  pixelBuffer.set(a, pixelOffset + 640);\n                  pixelBuffer.set(b, pixelOffset + 960);\n                  pixelBuffer.set(a, pixelOffset + 1280);\n                  pixelBuffer.set(b, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(b, pixelOffset + 2240);\n                } else if (pattern == 1) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(a, pixelOffset + 320);\n                  pixelBuffer.set(b, pixelOffset + 640);\n                  pixelBuffer.set(a, pixelOffset + 960);\n                  pixelBuffer.set(a, pixelOffset + 1280);\n                  pixelBuffer.set(b, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(a, pixelOffset + 2240);\n                } else if (pattern == 2) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(b, pixelOffset + 320);\n                  pixelBuffer.set(a, pixelOffset + 640);\n                  pixelBuffer.set(a, pixelOffset + 960);\n                  pixelBuffer.set(b, pixelOffset + 1280);\n                  pixelBuffer.set(a, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(b, pixelOffset + 2240);\n                } else if (pattern == 3) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(b, pixelOffset + 320);\n                  pixelBuffer.set(b, pixelOffset + 640);\n                  pixelBuffer.set(a, pixelOffset + 960);\n                  pixelBuffer.set(b, pixelOffset + 1280);\n                  pixelBuffer.set(b, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(b, pixelOffset + 2240);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this._prevDecodedFrame = frameIndex;\n    return this._layers;\n  }\n\n  getFramePalette(frameIndex) {\n    let flags = this.frameMeta[frameIndex].flags;\n    return [\n      PALETTE[flags & 0xF], // paper color\n      PALETTE[(flags >> 8) & 0xF], // layer A color 1\n      PALETTE[(flags >> 12) & 0xF], // layer A color 2\n      PALETTE[(flags >> 16) & 0xF], // layer B color 1\n      PALETTE[(flags >> 20) & 0xF], // layer B color 2\n      PALETTE[(flags >> 24) & 0xF], // layer C color 1\n      PALETTE[(flags >> 28) & 0xF], // layer C color 2\n    ];\n  }\n\n  getFrameImage(frameIndex) {\n    let layers = this.decodeFrame(frameIndex);\n    let image = new Uint8Array((320 * 240));\n    for (let pixel = 0; pixel < (320 * 240); pixel++) {\n      let a = layers[0][pixel];\n      let b = layers[1][pixel];\n      let c = layers[2][pixel];\n      if (c) image[pixel] = c + 4;\n      if (b) image[pixel] = b + 2;\n      if (a) image[pixel] = a;\n    }\n    return image;\n  }\n\n  decodeSoundFlags() {\n    var arr = new Array(this.frameCount).fill([]);\n    return arr.map(_ => [false, false, false]);\n  }\n\n  hasAudioTrack(trackIndex) {\n    return false;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./parser/kwz.js","import urlLoader from \"./urlLoader\";\nimport fileLoader from \"./fileLoader\";\nimport arrayBufferLoader from \"./arrayBufferLoader\";\n\nconst loaders = [\n  urlLoader,\n  fileLoader,\n  arrayBufferLoader\n];\n\nexport default function load(source) {\n  return new Promise(function (resolve, reject) {\n    for (var i = 0; i < loaders.length; i++) {\n      var loader = loaders[i];\n      if (loader.matches(source)) {\n        loader.load(source, resolve, reject);\n        break;\n      }\n    }\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/index.js","export default {\n\n  matches: function(source) {\n    return typeof source === \"string\";\n  },\n\n  load: function(source, resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", source, true);\n    xhr.responseType = \"arraybuffer\"; \n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject({\n            type: \"httpError\",\n            status: xhr.status,\n            statusText: xhr.statusText\n          });\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/urlLoader.js","export default {\n\n  matches: function(source) {\n    return (source instanceof File);\n  },\n\n  load: function(source, resolve, reject) {\n    var reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    };\n    reader.onerror = (event) => {\n      reject({type: \"fileReadError\"});\n    };\n    reader.readAsArrayBuffer(source);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/fileLoader.js","export default {\n\n  matches: function(source) {\n    return (source instanceof ArrayBuffer);\n  },\n\n  load: function(source, resolve, reject) {\n    resolve(source);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./loader/arrayBufferLoader.js","import wavEncoder from \"encoders/wav\";\n\nexport default class audioTrack {\n  /**\n  * Create a new audio player\n  */\n  constructor (id) {\n    this.id = id;\n    this.channelCount = 1;\n    this.bitsPerSample = 16;\n    this.sampleRate = 8192;\n    this.playbackRate = 1;\n    this.audio = document.createElement(\"audio\");\n    this.audio.preload = true;\n    this.active = false;\n  }\n\n  /**\n  * Set the audio track\n  * @param {Int16Array} pcmData - mono-channel 16-bit PCM audio\n  * @param {number} playbackRate - audio playback rate (1 = default)\n  */\n  set(pcmData, playbackRate) {\n    // the HTML5 audio element supports PCM audio if it's in a WAV wrapper\n    let wav = new wavEncoder(this.sampleRate * playbackRate, this.channelCount, this.bitsPerSample);\n    wav.writeFrames(pcmData);\n    this.url = window.URL.createObjectURL(wav.getBlob());\n    // use the blob url for the audio element\n    this.audio.src = this.url;\n    this.active = true;\n    this.playbackRate = playbackRate;\n    this.length = pcmData.length;\n  }\n\n  get duration() {\n    return this.audio.duration;\n  }\n\n  /**\n  * Clear the audio track\n  */\n  unset() {\n    if (this.active) {\n      window.URL.revokeObjectURL(this.url);\n      this.audio.src = \"\";\n      this.audio.load();\n      this.active = false;\n      this.playbackRate = 1;\n      this.length = null;\n    }\n  }\n\n  /**\n  * Start audio playback\n  * @param {number} offset - offset to begin playback at\n  */\n  start(offset) {\n    if (this.active) {\n      this.audio.currentTime = offset || 0;\n      this.audio.play();\n    }\n  }\n\n  /**\n  * Stop audio playback\n  */\n  stop() {\n    if (this.active) {\n      this.audio.pause();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./player/audio.js","import dataStream from \"utils/dataStream\";\n\nexport default class wavEncoder {\n  constructor(sampleRate, channels=1, bitsPerSample=16) {\n    this.sampleRate = sampleRate;\n    this.channels = channels;\n    this.bitsPerSample = bitsPerSample;\n    // Write WAV file header\n    // Reference: http://www.topherlee.com/software/pcm-tut-wavformat.html\n    let headerBuffer = new ArrayBuffer(44);\n    let header = new dataStream(headerBuffer);\n    // \"RIFF\" indent\n    header.writeUtf8(\"RIFF\");\n    // filesize (set later)\n    header.writeUint32(0);\n    // \"WAVE\" indent\n    header.writeUtf8(\"WAVE\");\n    // \"fmt \" section header\n    header.writeUtf8(\"fmt \");\n    // fmt section length\n    header.writeUint32(16);\n    // specify audio format is pcm (type 1)\n    header.writeUint16(1);\n    // number of audio channels\n    header.writeUint16(this.channels);\n    // audio sample rate\n    header.writeUint32(this.sampleRate);\n    // byterate = (sampleRate * bitsPerSample * channelCount) / 8\n    header.writeUint32((this.sampleRate * this.bitsPerSample * this.channels) / 8);\n    // blockalign = (bitsPerSample * channels) / 8\n    header.writeUint16((this.bitsPerSample * this.channels) / 8);\n    // bits per sample\n    header.writeUint16(this.bitsPerSample);\n    // \"data\" section header\n    header.writeUtf8(\"data\");\n    // data section length (set later)\n    header.writeUint32(0);\n    this.header = header;\n    this.pcmData = null;\n  }\n\n  writeFrames(pcmData) {\n    let header = this.header;\n    // fill in filesize\n    header.seek(4);\n    header.writeUint32(header.byteLength + pcmData.byteLength);\n    // fill in data section length\n    header.seek(40);\n    header.writeUint32(pcmData.byteLength);\n    this.pcmData = pcmData;\n  }\n\n  getBlob() {\n    return new Blob([this.header.buffer, this.pcmData.buffer], {type: \"audio/wav\"});\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./encoders/wav.js"],"sourceRoot":""}