{"version":3,"file":"flipnote.js.map","sources":["../src/utils/byteArray.ts","../src/utils/dataStream.ts","../src/loaders/urlLoader.ts","../src/loaders/fileLoader.ts","../src/loaders/arrayBufferLoader.ts","../src/loaders/index.ts","../node_modules/tslib/tslib.es6.js","../src/parsers/parserBase.ts","../src/parsers/adpcm.ts","../src/parsers/ppm.ts","../src/parsers/kwzTables.ts","../src/parsers/kwz.ts","../src/parsers/index.ts","../src/encoders/wav.ts","../src/player/audio.ts","../src/webgl/canvas.ts","../src/player/index.ts","../src/encoders/lzw.ts","../src/encoders/gif.ts","../src/flipnote.ts"],"sourcesContent":["export class ByteArray {\n\n  static pageSize: number = 4096;\n\n  private page: number = -1;\n  private pages: Uint8Array[] = [];\n  private cursor: number = 0;\n\n  constructor() {\n    this.newPage();\n  }\n  \n  private newPage() {\n    this.pages[++this.page] = new Uint8Array(ByteArray.pageSize);\n    this.cursor = 0;\n  }\n  \n  public getData() {\n    const data = new Uint8Array((this.page) * ByteArray.pageSize + this.cursor);\n    this.pages.map((page, index) => {\n      if (index === this.page) {\n        data.set(page.slice(0, this.cursor), index * ByteArray.pageSize);\n      } else {\n        data.set(page, index * ByteArray.pageSize);\n      }\n    });\n    return data;\n  }\n\n  public getBuffer() {\n    const data = this.getData();\n    return data.buffer;\n  }\n  \n  public writeByte(val: number) {\n    if (this.cursor >= ByteArray.pageSize) this.newPage();\n    this.pages[this.page][this.cursor++] = val;\n  }\n\n  public writeBytes(array: Uint8Array | number[], offset?: number, length?: number) {\n    for (let l = length || array.length, i = offset || 0; i < l; i++)\n      this.writeByte(array[i]);\n  }\n}","/** datastream serves as a wrapper around the DataView API to help keep track of the offset into the stream */\nexport const enum SeekOrigin {\n  Begin,\n  Current,\n  End\n};\n\nexport class DataStream {\n\n  public buffer: ArrayBuffer;\n  private data: DataView;\n  private cursor: number;\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.data = new DataView(arrayBuffer);\n    this.cursor = 0;\n  }\n\n  get bytes() {\n    return new Uint8Array(this.buffer);\n  }\n\n  get byteLength() {\n    return this.data.byteLength;\n  }\n\n  public seek(offset: number, whence?: SeekOrigin) {\n    switch (whence) {\n      case SeekOrigin.End:\n        this.cursor = this.data.byteLength + offset;\n        break;\n      case SeekOrigin.Current:\n        this.cursor += offset;\n        break;\n      case SeekOrigin.Begin:\n      default:\n        this.cursor = offset;\n        break;\n    }\n  }\n\n  public readUint8() {\n    const val = this.data.getUint8(this.cursor);\n    this.cursor += 1;\n    return val;\n  }\n\n  public writeUint8(value: number) {\n    this.data.setUint8(this.cursor, value);\n    this.cursor += 1;\n  }\n\n  public readInt8() {\n    const val = this.data.getInt8(this.cursor);\n    this.cursor += 1;\n    return val;\n  }\n\n  public writeInt8(value: number) {\n    this.data.setInt8(this.cursor, value);\n    this.cursor += 1;\n  }\n\n  public readUint16(littleEndian: boolean=true) {\n    const val = this.data.getUint16(this.cursor, littleEndian);\n    this.cursor += 2;\n    return val;\n  }\n\n  public writeUint16(value: number, littleEndian: boolean=true) {\n    this.data.setUint16(this.cursor, value, littleEndian);\n    this.cursor += 2;\n  }\n\n  public readInt16(littleEndian: boolean=true) {\n    const val = this.data.getInt16(this.cursor, littleEndian);\n    this.cursor += 2;\n    return val;\n  }\n\n  public writeInt16(value: number, littleEndian: boolean=true) {\n    this.data.setInt16(this.cursor, value, littleEndian);\n    this.cursor += 2;\n  }\n\n  public readUint32(littleEndian: boolean=true) {\n    const val = this.data.getUint32(this.cursor, littleEndian);\n    this.cursor += 4;\n    return val;\n  }\n  \n  public writeUint32(value: number, littleEndian: boolean=true) {\n    this.data.setUint32(this.cursor, value, littleEndian);\n    this.cursor += 4;\n  }\n\n  public readInt32(littleEndian: boolean=true) {\n    const val = this.data.getInt32(this.cursor, littleEndian);\n    this.cursor += 4;\n    return val;\n  }\n\n  public writeInt32(value: number, littleEndian: boolean=true) {\n    this.data.setInt32(this.cursor, value, littleEndian);\n    this.cursor += 4;\n  }\n\n  public readBytes(count: number) {\n    const bytes = new Uint8Array(this.data.buffer, this.cursor, count);\n    this.cursor += bytes.byteLength;\n    return bytes;\n  }\n\n  public writeBytes(bytes: number[] | Uint8Array) {\n    bytes.forEach((byte: number) => this.writeUint8(byte));\n  }\n\n  public readHex(count: number, reverse: boolean=false) {\n    const bytes = this.readBytes(count);\n    let hex = [];\n    for (let i = 0; i < bytes.length; i++) {\n      hex.push(bytes[i].toString(16).padStart(2, '0'));\n    }\n    if (reverse) hex.reverse();\n    return hex.join('').toUpperCase();\n  }\n\n  public readUtf8(count: number) {\n    const chars = this.readBytes(count);\n    let str = '';\n    for (let i = 0; i < chars.length; i++) {\n      const char = chars[i];\n      if (char === 0) break;\n      str += String.fromCharCode(char);\n    }\n    return str;\n  }\n\n  public writeUtf8(string: string) {\n    for (let i = 0; i < string.length; i++) {\n      const char = string.charCodeAt(i);\n      this.writeUint8(char);\n    }\n  }\n\n  public readUtf16(count: number) {\n    const chars = new Uint16Array(this.data.buffer, this.cursor, count);\n    let str = '';\n    for (let i = 0; i < chars.length; i++) {\n      const char = chars[i];\n      if (char == 0) break;\n      str += String.fromCharCode(char);\n    }\n    this.cursor += chars.byteLength;\n    return str;\n  }\n}","export default {\n\n  matches: function(source: any): boolean {\n    return typeof source === 'string';\n  },\n\n  load: function(source: string, resolve: Function, reject: Function): void {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', source, true);\n    xhr.responseType = 'arraybuffer'; \n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject({\n            type: 'httpError',\n            status: xhr.status,\n            statusText: xhr.statusText\n          });\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n}","export default {\n\n  matches: function(source: any): boolean {\n    return (typeof File !== 'undefined' && source instanceof File);\n  },\n\n  load: function(source: File, resolve: Function, reject: Function): void {\n    if (typeof FileReader !== 'undefined') {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        resolve(reader.result);\n      };\n      reader.onerror = (event) => {\n        reject({type: 'fileReadError'});\n      };\n      reader.readAsArrayBuffer(source);\n    } else {\n      reject();\n    }\n  }\n\n}","export default {\n\n  matches: function(source: any): boolean {\n    return (source instanceof ArrayBuffer);\n  },\n\n  load: function(source: ArrayBuffer, resolve: Function, reject: Function): void {\n    resolve(source);\n  }\n\n}","import urlLoader from './urlLoader';\nimport fileLoader from './fileLoader';\nimport arrayBufferLoader from './arrayBufferLoader';\n\nconst loaders = [\n  urlLoader,\n  fileLoader,\n  arrayBufferLoader\n];\n\nexport function loadSource(source: any) {\n  return new Promise(function (resolve, reject) {\n    loaders.forEach(loader => {\n      if (loader.matches(source)) {\n        loader.load(source, resolve, reject);\n      }\n    });\n  });\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DataStream } from '../utils/index';\n\nexport type PaletteColor = [number, number, number]; // r, g, b\n\nexport type PaletteDefinition = {\n  [key in any]?: PaletteColor;\n};\n\nexport enum FlipnoteAudioTrack {\n  BGM,\n  SE1,\n  SE2,\n  SE3,\n  SE4\n};\n\nexport type FlipnoteAudioTrackInfo = {\n  [key in FlipnoteAudioTrack]?: {\n    offset: number,\n    length: number\n  }\n}\n\nexport abstract class FlipnoteParserBase extends DataStream {\n\n  static type: string;\n  static sampleRate: number;\n  static width: number;\n  static height: number;\n  static globalPalette: PaletteColor[];\n\n  public type: string\n  public width: number;\n  public height: number;\n  public palette: PaletteDefinition;\n  public globalPalette: PaletteColor[];\n\n  public meta: any;\n  public soundMeta: FlipnoteAudioTrackInfo;\n\n  public frameCount: number;\n  public frameSpeed: number;\n  public bgmSpeed: number;\n  public framerate: number;\n  public bgmrate: number;\n  public sampleRate: number;\n  public thumbFrameIndex: number;\n\n  abstract decodeFrame(frameIndex: number): Uint8Array[];\n\n  abstract getLayerPixels(frameIndex: number, layerIndex: number): Uint8Array | Uint16Array;\n\n  abstract getLayerOrder(frameIndex: number): number[];\n\n  abstract getFramePixels(frameIndex: number): Uint8Array;\n\n  abstract getFramePaletteIndices(frameIndex: number): number[];\n  \n  abstract getFramePalette(frameIndex: number): PaletteColor[];\n\n  abstract decodeAudio(trackId: FlipnoteAudioTrack): Int16Array;\n\n  abstract decodeSoundFlags(): number[][];\n\n  public hasAudioTrack(trackId: FlipnoteAudioTrack): boolean {\n    if (this.soundMeta.hasOwnProperty(trackId) && this.soundMeta[trackId].length > 0) {\n      return true;\n    } \n    return false;\n  }\n\n  public getInt16AudioData(trackId: FlipnoteAudioTrack) {\n    return this.decodeAudio(trackId);\n  }\n\n  public getFloat32AudioData(trackId: FlipnoteAudioTrack) {\n    const pcm16 = this.decodeAudio(trackId);\n    const outbuffer = new Float32Array(pcm16.length);\n    for (let i = 0; i < pcm16.length; i++) {\n      outbuffer[i] = pcm16[i] / 32767;\n    }\n    return outbuffer;\n  }\n}","export const ADPCM_INDEX_TABLE_2 = new Int8Array([\n  -1, 2, -1, 2\n]);\n\nexport const ADPCM_INDEX_TABLE_4 = new Int8Array([\n  -1, -1, -1, -1, 2, 4, 6, 8,\n  -1, -1, -1, -1, 2, 4, 6, 8\n]);\n\n// note that this is a slight deviation from the normal adpcm table\nexport const ADPCM_STEP_TABLE = new Int16Array([\n  7, 8, 9, 10, 11, 12, 13, 14, 16, 17,\n  19, 21, 23, 25, 28, 31, 34, 37, 41, 45,\n  50, 55, 60, 66, 73, 80, 88, 97, 107, 118,\n  130, 143, 157, 173, 190, 209, 230, 253, 279, 307,\n  337, 371, 408, 449, 494, 544, 598, 658, 724, 796,\n  876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066,\n  2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358,\n  5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899,\n  15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767, 0\n]);\n\nexport const ADPCM_SAMPLE_TABLE_2 = new Int16Array(90 * 4);\nfor (let sample = 0; sample < 4; sample++) {\n  for (let stepIndex = 0; stepIndex < 90; stepIndex++) {\n    let step = ADPCM_STEP_TABLE[stepIndex];\n    let diff = step >> 3;\n    if (sample & 1) diff += step;\n    if (sample & 2) diff = -diff;\n    ADPCM_SAMPLE_TABLE_2[sample + 4 * stepIndex] = diff;\n  }\n}\n\nexport const ADPCM_SAMPLE_TABLE_4 = new Int16Array(90 * 16);\nfor (let sample = 0; sample < 16; sample++) {\n  for (let stepIndex = 0; stepIndex < 90; stepIndex++) {\n    let step = ADPCM_STEP_TABLE[stepIndex];\n    let diff = step >> 3;\n    if (sample & 4) diff += step;\n    if (sample & 2) diff += step >> 1;\n    if (sample & 1) diff += step >> 2;\n    if (sample & 8) diff = -diff;\n    ADPCM_SAMPLE_TABLE_4[sample + 16 * stepIndex] = diff;\n  }\n}","/**\n * PPM decoder\n * Reads frames, audio, and metadata from Flipnote Studio PPM files \n * Based on my Python PPM decoder implementation (https://github.com/jaames/flipnote-tools)\n *  \n * Credits:\n *  PPM format reverse-engineering and documentation:\n *   - bricklife (http://ugomemo.g.hatena.ne.jp/bricklife/20090307/1236391313)\n *   - mirai-iro (http://mirai-iro.hatenablog.jp/entry/20090116/ugomemo_ppm)\n *   - harimau_tigris (http://ugomemo.g.hatena.ne.jp/harimau_tigris)\n *   - steven (http://www.dsibrew.org/wiki/User:Steven)\n *   - yellows8 (http://www.dsibrew.org/wiki/User:Yellows8)\n *   - PBSDS (https://github.com/pbsds)\n *   - jaames (https://github.com/jaames)\n *  Identifying the PPM sound codec:\n *   - Midmad from Hatena Haiku\n *   - WDLMaster from hcs64.com\n *  Helping me to identify issues with the Python decoder that this is based on:\n *   - Austin Burk (https://sudomemo.net)\n * \n *  Lastly, a huge thanks goes to Nintendo for creating Flipnote Studio, \n *  and to Hatena for providing the Flipnote Hatena online service, both of which inspired so many c:\n*/\n\nimport { \n  PaletteDefinition,\n  FlipnoteAudioTrack,\n  FlipnoteParserBase\n} from './parserBase';\n\nimport {\n  ADPCM_INDEX_TABLE_4,\n  ADPCM_SAMPLE_TABLE_4\n} from './adpcm';\n\n// internal frame speed value -> FPS table\nconst FRAMERATES = [\n  null,\n  0.5,\n  1,\n  2,\n  4,\n  6,\n  12,\n  20,\n  30,\n];\n\nconst PALETTE: PaletteDefinition = {\n  WHITE: [0xff, 0xff, 0xff],\n  BLACK: [0x0e, 0x0e, 0x0e],\n  RED:   [0xff, 0x2a, 0x2a],\n  BLUE:  [0x0a, 0x39, 0xff],\n};\n\nexport interface PpmMeta {\n  lock: boolean;\n  loop: boolean;\n  frame_count: number;\n  frame_speed: number;\n  bgm_speed: number;\n  thumb_index: number;\n  timestamp: Date;\n  spinoff: boolean;\n  root: {\n    filename: string;\n    username: string;\n    fsid: string;\n  },\n  parent: {\n    filename: string;\n    username: string;\n    fsid: string;\n  },\n  current: {\n    filename: string;\n    username: string;\n    fsid: string;\n  },\n};\n\nexport class PpmParser extends FlipnoteParserBase {\n\n  static type: string = 'PPM';\n  static width: number = 256;\n  static height: number = 192;\n  static sampleRate: number = 8192;\n  static globalPalette = [\n    PALETTE.WHITE,\n    PALETTE.BLACK,\n    PALETTE.RED,\n    PALETTE.BLUE\n  ];\n\n  public type: string = PpmParser.type;\n  public width: number = PpmParser.width;\n  public height: number = PpmParser.height;\n  public globalPalette = PpmParser.globalPalette;\n  public sampleRate = PpmParser.sampleRate;\n  public meta: PpmMeta;\n  public version: number;\n\n  private layers: Uint8Array[];\n  private prevLayers: Uint8Array[];\n  private prevDecodedFrame: number = null;\n  private frameDataLength: number;\n  private soundDataLength: number;\n  private frameOffsets: Uint32Array;\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    super(arrayBuffer);\n    this.decodeHeader();\n    this.decodeAnimationHeader();\n    this.decodeSoundHeader();\n    this.decodeMeta();\n    // create image buffers\n    this.layers = [\n      new Uint8Array(PpmParser.width * PpmParser.height),\n      new Uint8Array(PpmParser.width * PpmParser.height)\n    ];\n    this.prevLayers = [\n      new Uint8Array(PpmParser.width * PpmParser.height),\n      new Uint8Array(PpmParser.width * PpmParser.height)\n    ];\n    this.prevDecodedFrame = null;\n  }\n\n  static validateFSID(fsid: string) {\n    return /[0159]{1}[0-9A-F]{6}0[0-9A-F]{8}/.test(fsid);\n  }\n\n  static validateFilename(filename: string) {\n    return /[0-9A-F]{6}_[0-9A-F]{13}_[0-9]{3}/.test(filename);\n  }\n\n  private readFilename() {\n    return [\n      this.readHex(3),\n      this.readUtf8(13),\n      this.readUint16().toString().padStart(3, '0')\n    ].join('_');\n  }\n\n  private readLineEncoding() {\n    const unpacked = new Uint8Array(PpmParser.height);\n    for (var byteIndex = 0; byteIndex < 48; byteIndex ++) {\n      const byte = this.readUint8();\n      // each line's encoding type is stored as a 2-bit value\n      for (var bitOffset = 0; bitOffset < 8; bitOffset += 2) {\n        unpacked[byteIndex * 4 + bitOffset / 2] = (byte >> bitOffset) & 0x03;\n      }\n    }\n    return unpacked;\n  }\n\n  private decodeHeader() {\n    this.seek(0);\n    // decode header\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    let magic = this.readUint32();\n    this.frameDataLength = this.readUint32();\n    this.soundDataLength = this.readUint32();\n    this.frameCount = this.readUint16() + 1;\n    this.version = this.readUint16();\n  }\n\n  private decodeMeta() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#file-header\n    this.seek(0x10);\n    const lock = this.readUint16(),\n          thumbIndex = this.readInt16(),\n          rootAuthorName = this.readUtf16(11),\n          parentAuthorName = this.readUtf16(11),\n          currentAuthorName = this.readUtf16(11),\n          parentAuthorId = this.readHex(8, true),\n          currentAuthorId = this.readHex(8, true),\n          parentFilename = this.readFilename(),\n          currentFilename = this.readFilename(),\n          rootAuthorId = this.readHex(8, true);\n    this.seek(0x9A);\n    const timestamp = new Date((this.readUint32() + 946684800) * 1000);\n    this.seek(0x06A6);\n    const flags = this.readUint16();\n    this.thumbFrameIndex = thumbIndex;\n    this.meta = {\n      lock: lock === 1,\n      loop: (flags >> 1 & 0x01) === 1,\n      frame_count: this.frameCount,\n      frame_speed: this.frameSpeed,\n      bgm_speed: this.bgmSpeed,\n      thumb_index: thumbIndex,\n      timestamp: timestamp,\n      spinoff: (currentAuthorId !== parentAuthorId) || (currentAuthorId !== rootAuthorId),\n      root: {\n        filename: null,\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename\n      },\n    };\n  }\n\n  private decodeAnimationHeader() {\n    // jump to the start of the animation data section\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-data-section\n    this.seek(0x06A0);\n    const offsetTableLength = this.readUint16();\n    // skip padding + flags\n    this.seek(0x06A8);\n    // read frame offsets and build them into a table\n    this.frameOffsets = new Uint32Array(offsetTableLength / 4).map(value => {\n      return 0x06A8 + offsetTableLength + this.readUint32();\n    });\n  }\n\n  private decodeSoundHeader() {\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#sound-data-section\n    // offset = frame data offset + frame data length + sound effect flags\n    let offset = 0x06A0 + this.frameDataLength + this.frameCount;\n    // account for multiple-of-4 padding\n    if (offset % 4 != 0) offset += 4 - (offset % 4);\n    this.seek(offset);\n    const bgmLen = this.readUint32();\n    const se1Len = this.readUint32();\n    const se2Len = this.readUint32();\n    const se3Len = this.readUint32();\n    this.frameSpeed = 8 - this.readUint8();\n    this.bgmSpeed = 8 - this.readUint8();\n    offset += 32;\n    this.framerate = FRAMERATES[this.frameSpeed];\n    this.bgmrate = FRAMERATES[this.bgmSpeed];\n    this.soundMeta = {\n      [FlipnoteAudioTrack.BGM]: {offset: offset,           length: bgmLen},\n      [FlipnoteAudioTrack.SE1]: {offset: offset += bgmLen, length: se1Len},\n      [FlipnoteAudioTrack.SE2]: {offset: offset += se1Len, length: se2Len},\n      [FlipnoteAudioTrack.SE3]: {offset: offset += se2Len, length: se3Len},\n    };\n  }\n\n  public isNewFrame(frameIndex: number) {\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    return (header >> 7) & 0x1;\n  }\n\n  public getLayerOrder(frameIndex?: number) {\n    return [0, 1];\n  }\n\n  public decodeFrame(frameIndex: number) {\n    if ((frameIndex !== 0) && (this.prevDecodedFrame !== frameIndex - 1) && (!this.isNewFrame(frameIndex)))\n      this.decodeFrame(frameIndex - 1);\n    // https://github.com/pbsds/hatena-server/wiki/PPM-format#animation-frame\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    const isNewFrame = (header >> 7) & 0x1;\n    const isTranslated = (header >> 5) & 0x3;\n    let translateX = 0;\n    let translateY = 0;\n    // copy the current layer buffers to the previous ones\n    this.prevLayers[0].set(this.layers[0]);\n    this.prevLayers[1].set(this.layers[1]);\n    this.prevDecodedFrame = frameIndex;\n    // reset current layer buffers\n    this.layers[0].fill(0);\n    this.layers[1].fill(0);\n\n    if (isTranslated) {\n      translateX = this.readInt8();\n      translateY = this.readInt8();\n    }\n\n    const layerEncoding = [\n      this.readLineEncoding(),\n      this.readLineEncoding(),\n    ];\n     // start decoding layer bitmaps\n    for (let layer = 0; layer < 2; layer++) {\n      const layerBitmap = this.layers[layer];\n      for (let line = 0; line < PpmParser.height; line++) {\n        const lineType = layerEncoding[layer][line];\n        let chunkOffset = line * PpmParser.width;\n        switch(lineType) {\n          // line type 0 = blank line, decode nothing\n          case 0:\n            break;\n          // line types 1 + 2 = compressed bitmap line\n          case 1:\n          case 2:\n            let lineHeader = this.readUint32(false);\n            // line type 2 starts as an inverted line\n            if (lineType == 2) layerBitmap.fill(0xFF, chunkOffset, chunkOffset + PpmParser.width);\n            // loop through each bit in the line header\n            while (lineHeader & 0xFFFFFFFF) {\n              // if the bit is set, this 8-pix wide chunk is stored\n              // else we can just leave it blank and move on to the next chunk\n              if (lineHeader & 0x80000000) {\n                const chunk = this.readUint8();\n                // unpack chunk bits\n                for (let pixel = 0; pixel < 8; pixel++) {\n                  layerBitmap[chunkOffset + pixel] = (chunk >> pixel & 0x1) ? 0xFF : 0x00;\n                }\n              }\n              chunkOffset += 8;\n              // shift lineheader to the left by 1 bit, now on the next loop cycle the next bit will be checked\n              lineHeader <<= 1;\n            }\n            break;\n          // line type 3 = raw bitmap line\n          case 3:\n            while(chunkOffset < (line + 1) * PpmParser.width) {\n              const chunk = this.readUint8();\n              for (let pixel = 0; pixel < 8; pixel++) {\n                layerBitmap[chunkOffset + pixel] = (chunk >> pixel & 0x1) ? 0xFF : 0x00;\n              }\n              chunkOffset += 8;\n            }\n            break;\n        }\n      }\n    }\n    // if the current frame is based on changes from the preivous one, merge them by XORing their values\n    if (!isNewFrame) {\n      let dest: number, src: number;\n      // loop through each line\n      for (let y = 0; y < PpmParser.height; y++) {\n        // skip to next line if this one falls off the top edge of the screen\n        if (y - translateY < 0) continue;\n        // stop once the bottom screen edge has been reached\n        if (y - translateY >= PpmParser.height) break;\n        // loop through each pixel in the line\n        for (let x = 0; x < PpmParser.width; x++) {\n          // skip to the next pixel if this one falls off the left edge of the screen\n          if (x - translateX < 0) continue;\n          // stop diffing this line once the right screen edge has been reached\n          if (x - translateX >= PpmParser.width) break;\n          dest = x + y * PpmParser.width;\n          src = dest - (translateX + translateY * PpmParser.width);\n          // diff pixels with a binary XOR\n          this.layers[0][dest] ^= this.prevLayers[0][src];\n          this.layers[1][dest] ^= this.prevLayers[1][src];\n        }\n      }\n    }\n    return this.layers;\n  }\n\n  public getFramePaletteIndices(frameIndex: number) {\n    this.seek(this.frameOffsets[frameIndex]);\n    const header = this.readUint8();\n    const isInverted = (header & 0x1) !== 1;\n    const penMap = [\n      isInverted ? 0 : 1, // pen index 0 isn't used in normal cases\n      isInverted ? 0 : 1,\n      2,\n      3,\n    ];\n    return [\n      isInverted ? 1 : 0, // paper\n      penMap[(header >> 1) & 0x3], // layer 1 color\n      penMap[(header >> 3) & 0x3], // layer 2 color\n    ];\n  }\n\n  public getFramePalette(frameIndex: number) {\n    const indices = this.getFramePaletteIndices(frameIndex);\n    return indices.map(colorIndex => this.globalPalette[colorIndex]);\n  }\n\n  // retuns an uint8 array where each item is a pixel's palette index\n  public getLayerPixels(frameIndex: number, layerIndex: number) {\n    if (this.prevDecodedFrame !== frameIndex) {\n      this.decodeFrame(frameIndex);\n    }\n    const palette = this.getFramePaletteIndices(frameIndex);\n    const layer = this.layers[layerIndex];\n    const image = new Uint8Array(PpmParser.width * PpmParser.height);\n    const layerColor = palette[layerIndex + 1];\n    for (let pixel = 0; pixel < image.length; pixel++) {\n      if (layer[pixel] !== 0) {\n        image[pixel] = layerColor;\n      }\n    }\n    return image;\n  }\n\n  // retuns an uint8 array where each item is a pixel's palette index\n  public getFramePixels(frameIndex: number) {\n    const palette = this.getFramePaletteIndices(frameIndex);\n    const layers = this.decodeFrame(frameIndex);\n    const image = new Uint8Array(PpmParser.width * PpmParser.height);\n    image.fill(palette[0]); // fill with paper color first\n    for (let pixel = 0; pixel < image.length; pixel++) {\n      const a = layers[0][pixel];\n      const b = layers[1][pixel];\n      if (a !== 0)\n        image[pixel] = palette[1];\n      else if (b !== 0)\n        image[pixel] = palette[2];\n    }\n    return image;\n  }\n\n  public decodeAudio(trackId: FlipnoteAudioTrack) {\n    const trackMeta = this.soundMeta[trackId];\n    const adpcm = new Uint8Array(this.buffer, trackMeta.offset, trackMeta.length);\n    const output = new Int16Array(adpcm.length * 2);\n    let outputOffset = 0;\n    // initial decoder state\n    let prevDiff = 0;\n    let prevStepIndex = 0;\n    let sample: number;\n    let diff: number;\n    let stepIndex: number;\n    // loop through each byte in the raw adpcm data\n    for (let adpcmOffset = 0; adpcmOffset < adpcm.length; adpcmOffset++) {\n      const byte = adpcm[adpcmOffset];\n      let bitPos = 0;\n      while (bitPos < 8) {\n        // isolate 4-bit sample\n        sample = (byte >> bitPos) & 0xF;\n        // get diff\n        diff = prevDiff + ADPCM_SAMPLE_TABLE_4[sample + 16 * prevStepIndex];\n        // get step index\n        stepIndex = prevStepIndex + ADPCM_INDEX_TABLE_4[sample];\n        // clamp step index and diff\n        stepIndex = Math.max(0, Math.min(stepIndex, 79));\n        diff = Math.max(-32767, Math.min(diff, 32767));\n        // add result to output buffer\n        output[outputOffset] = diff;\n        outputOffset += 1;\n        // set prev decoder state\n        prevStepIndex = stepIndex;\n        prevDiff = diff;\n        // move to next sample\n        bitPos += 4;\n      }\n    }\n    return output;\n  }\n\n  public decodeSoundFlags() {\n    this.seek(0x06A0 + this.frameDataLength);\n    // per msdn docs - the array map callback is only invoked for array indicies that have assigned values\n    // so when we create an array, we need to fill it with something before we can map over it\n    const arr = new Array(this.frameCount).fill([]);\n    return arr.map(value => {\n      const byte = this.readUint8();\n      return [byte & 0x1, (byte >> 1) & 0x1, (byte >> 2) & 0x1];\n    });\n  }\n}","// Every possible sequence of pixels for each tile line\nexport const KWZ_LINE_TABLE = new Uint16Array(6561 * 8);\nconst pixelValues = [0x0000, 0xFF00, 0x00FF];\nvar offset = 0;\nfor (let a = 0; a < 3; a++)\n  for (let b = 0; b < 3; b++)\n    for (let c = 0; c < 3; c++)\n      for (let d = 0; d < 3; d++)\n        for (let e = 0; e < 3; e++)\n          for (let f = 0; f < 3; f++)\n            for (let g = 0; g < 3; g++)\n              for (let h = 0; h < 3; h++) {\n                KWZ_LINE_TABLE.set([\n                  pixelValues[b], \n                  pixelValues[a], \n                  pixelValues[d], \n                  pixelValues[c], \n                  pixelValues[f], \n                  pixelValues[e], \n                  pixelValues[h], \n                  pixelValues[g]\n                ], offset);\n                offset += 8;\n              }\n\n// Line offsets, but the lines are shifted to the left by one pixel\nexport const KWZ_LINE_TABLE_SHIFT = new Uint16Array(6561 * 8);\nvar offset = 0;\nfor (let a = 0; a < 2187; a += 729)\n  for (let b = 0; b < 729; b += 243)\n    for (let c = 0; c < 243; c += 81)\n      for (let d = 0; d < 81; d += 27)\n        for (let e = 0; e < 27; e += 9)\n          for (let f = 0; f < 9; f += 3)\n            for (let g = 0; g < 3; g += 1)\n              for (let h = 0; h < 6561; h += 2187) {\n                const lineTableIndex = a + b + c + d + e + f + g + h;\n                const pixels = KWZ_LINE_TABLE.subarray(lineTableIndex * 8, lineTableIndex * 8 + 8);\n                KWZ_LINE_TABLE_SHIFT.set(pixels, offset);\n                offset += 8;\n              }\n\n// Commonly occuring line offsets\nexport const KWZ_LINE_TABLE_COMMON = new Uint16Array(32 * 8);\n[\n  0x0000, 0x0CD0, 0x19A0, 0x02D9, 0x088B, 0x0051, 0x00F3, 0x0009,\n  0x001B, 0x0001, 0x0003, 0x05B2, 0x1116, 0x00A2, 0x01E6, 0x0012,\n  0x0036, 0x0002, 0x0006, 0x0B64, 0x08DC, 0x0144, 0x00FC, 0x0024,\n  0x001C, 0x0004, 0x0334, 0x099C, 0x0668, 0x1338, 0x1004, 0x166C\n].forEach((lineTableIndex, index) => {\n  const pixels = KWZ_LINE_TABLE.subarray(lineTableIndex * 8, lineTableIndex * 8 + 8);\n  KWZ_LINE_TABLE_COMMON.set(pixels, index * 8);\n});\n\n// Commonly occuring line offsets, but the lines are shifted to the left by one pixel\nexport const KWZ_LINE_TABLE_COMMON_SHIFT = new Uint16Array(32 * 8);\n[\n  0x0000, 0x0CD0, 0x19A0, 0x0003, 0x02D9, 0x088B, 0x0051, 0x00F3, \n  0x0009, 0x001B, 0x0001, 0x0006, 0x05B2, 0x1116, 0x00A2, 0x01E6, \n  0x0012, 0x0036, 0x0002, 0x02DC, 0x0B64, 0x08DC, 0x0144, 0x00FC, \n  0x0024, 0x001C, 0x099C, 0x0334, 0x1338, 0x0668, 0x166C, 0x1004\n].forEach((lineTableIndex, index) => {\n  const pixels = KWZ_LINE_TABLE.subarray(lineTableIndex * 8, lineTableIndex * 8 + 8);\n  KWZ_LINE_TABLE_COMMON_SHIFT.set(pixels, index * 8);\n});\n\n","import { \n  PaletteDefinition,\n  FlipnoteAudioTrack,\n  FlipnoteParserBase\n} from './parserBase';\n\nimport {\n  ADPCM_INDEX_TABLE_2,\n  ADPCM_INDEX_TABLE_4,\n  ADPCM_SAMPLE_TABLE_2,\n  ADPCM_SAMPLE_TABLE_4\n} from './adpcm';\n\nimport {\n  KWZ_LINE_TABLE,\n  KWZ_LINE_TABLE_SHIFT,\n  KWZ_LINE_TABLE_COMMON,\n  KWZ_LINE_TABLE_COMMON_SHIFT,\n} from './kwzTables';\n\nconst FRAMERATES = [\n  1 / 5,\n  1 / 2,\n  1,\n  2,\n  4, \n  6,\n  8,\n  12, \n  20,\n  24,\n  30\n];\n\nconst PALETTE: PaletteDefinition = {\n  WHITE:  [0xff, 0xff, 0xff],\n  BLACK:  [0x10, 0x10, 0x10],\n  RED:    [0xff, 0x10, 0x10],\n  YELLOW: [0xff, 0xe7, 0x00],\n  GREEN:  [0x00, 0x86, 0x31],\n  BLUE:   [0x00, 0x38, 0xce],\n  NONE:   [0xff, 0xff, 0xff]\n};\n\nexport type KwzSectionMagic = 'KFH' | 'KTN' | 'KMC' | 'KMI' | 'KSN' | 'ICO';\n\nexport type KwzSectionMap = {\n  [k in KwzSectionMagic]?: {\n    offset: number, length: number\n  }\n};\n\nexport interface KwzMeta {\n  lock: boolean;\n  loop: boolean;\n  frame_count: number;\n  frame_speed: number;\n  thumb_index: number;\n  timestamp: Date;\n  creation_timestamp: Date;\n  root: {\n    filename: string;\n    username: string;\n    fsid: string;\n  },\n  parent: {\n    filename: string;\n    username: string;\n    fsid: string;\n  },\n  current: {\n    filename: string;\n    username: string;\n    fsid: string;\n  },\n};\n\nexport interface KwzFrameMeta {\n  flags: number;\n  layerSize: number[];\n  frameAuthor: string;\n  layerDepth: number[];\n  soundFlags: number;\n  cameraFlag: number;\n};\n\nexport class KwzParser extends FlipnoteParserBase {\n\n  static type: string = 'KWZ';\n  static width: number = 320;\n  static height: number = 240;\n  static sampleRate: number = 16364;\n  static globalPalette = [\n    PALETTE.WHITE,\n    PALETTE.BLACK,\n    PALETTE.RED,\n    PALETTE.YELLOW,\n    PALETTE.GREEN,\n    PALETTE.BLUE,\n    PALETTE.NONE,\n  ];\n\n  public type: string = KwzParser.type;\n  public width: number = KwzParser.width;\n  public height: number = KwzParser.height;\n  public globalPalette = KwzParser.globalPalette;\n  public sampleRate = KwzParser.sampleRate;\n  public meta: KwzMeta;\n\n  private sections: KwzSectionMap;\n  private layers: Uint16Array[];\n  private prevDecodedFrame: number = null;\n  private frameMeta: KwzFrameMeta[];\n  private frameOffsets: Uint32Array;\n  private bitIndex: number = 0;\n  private bitValue: number = 0;\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    super(arrayBuffer);\n    this.layers = [\n      new Uint16Array(KwzParser.width * KwzParser.height),\n      new Uint16Array(KwzParser.width * KwzParser.height),\n      new Uint16Array(KwzParser.width * KwzParser.height),\n    ];\n    this.bitIndex = 0;\n    this.bitValue = 0;\n    this.load();\n  }\n\n  load() {\n    this.seek(0);\n    this.sections = {};\n    this.frameMeta = [];\n    const fileSize = this.byteLength - 256;\n    let offset = 0;\n    let sectionCount = 0;\n    // counting sections should mitigate against one of mrnbayoh's notehax exploits\n    while ((offset < fileSize) && (sectionCount < 6)) {\n      this.seek(offset);\n      const sectionMagic = <KwzSectionMagic>this.readUtf8(4).substring(0, 3);\n      const sectionLength = this.readUint32();\n      this.sections[sectionMagic] = {\n        offset: offset,\n        length: sectionLength\n      };\n      offset += sectionLength + 8;\n      sectionCount += 1;\n    }\n\n    this.decodeMeta();\n    this.decodeFrameMeta();\n    this.decodeSoundHeader();\n  }\n\n  private readBits(num: number) {\n    if (this.bitIndex + num > 16) {\n      const nextBits = this.readUint16();\n      this.bitValue |= nextBits << (16 - this.bitIndex);\n      this.bitIndex -= 16;\n    }\n    const mask = (1 << num) - 1;\n    const result = this.bitValue & mask;\n    this.bitValue >>= num;\n    this.bitIndex += num;\n    return result;\n  }\n\n  private decodeMeta() {\n    this.seek(this.sections['KFH'].offset + 12);\n    const creationTimestamp = new Date((this.readUint32() + 946684800) * 1000),\n          modifiedTimestamp = new Date((this.readUint32() + 946684800) * 1000),\n          appVersion = this.readUint32(),\n          rootAuthorId = this.readHex(10),\n          parentAuthorId = this.readHex(10),\n          currentAuthorId = this.readHex(10),\n          rootAuthorName = this.readUtf16(11),\n          parentAuthorName = this.readUtf16(11),\n          currentAuthorName = this.readUtf16(11),\n          rootFilename = this.readUtf8(28),\n          parentFilename = this.readUtf8(28),\n          currentFilename = this.readUtf8(28),\n          frameCount = this.readUint16(),\n          thumbIndex = this.readUint16(),\n          flags = this.readUint16(),\n          frameSpeed = this.readUint8(),\n          layerFlags = this.readUint8();\n    this.frameCount = frameCount;\n    this.thumbFrameIndex = thumbIndex;\n    this.frameSpeed = frameSpeed;\n    this.framerate = FRAMERATES[frameSpeed];\n    this.meta = {\n      lock: (flags & 0x1) === 1,\n      loop: ((flags >> 1) & 0x01) === 1,\n      frame_count: frameCount,\n      frame_speed: frameSpeed,\n      thumb_index: thumbIndex,\n      timestamp: modifiedTimestamp,\n      creation_timestamp: creationTimestamp,\n      root: {\n        username: rootAuthorName,\n        fsid: rootAuthorId,\n        filename: rootFilename,\n      },\n      parent: {\n        username: parentAuthorName,\n        fsid: parentAuthorId,\n        filename: parentFilename,\n      },\n      current: {\n        username: currentAuthorName,\n        fsid: currentAuthorId,\n        filename: currentFilename,\n      },\n    };\n  }\n\n  private decodeFrameMeta() {\n    this.frameOffsets = new Uint32Array(this.frameCount);\n    this.seek(this.sections['KMI'].offset + 8);\n    let offset = this.sections['KMC'].offset + 12;\n    for (let i = 0; i < this.frameCount; i++) {\n      const frame = {\n        flags: this.readUint32(),\n        layerSize: [\n          this.readUint16(),\n          this.readUint16(),\n          this.readUint16()\n        ],\n        frameAuthor: this.readHex(10),\n        layerDepth: [\n          this.readUint8(),\n          this.readUint8(),\n          this.readUint8(),\n        ],\n        soundFlags: this.readUint8(),\n        cameraFlag: this.readUint32(),\n      };\n      this.frameMeta.push(frame);\n      this.frameOffsets[i] = offset;\n      offset += frame.layerSize[0] + frame.layerSize[1] + frame.layerSize[2];\n    }\n  }\n\n  private decodeSoundHeader() {\n    if (this.sections.hasOwnProperty('KSN')) {\n      let offset = this.sections['KSN'].offset + 8;\n      this.seek(offset);\n      const bgmSpeed = this.readUint32();\n      this.bgmSpeed = bgmSpeed;\n      this.bgmrate = FRAMERATES[bgmSpeed];\n      const trackSizes = new Uint32Array(this.buffer, offset + 4, 20);\n      this.soundMeta = {\n        [FlipnoteAudioTrack.BGM]: {offset: offset += 28,            length: trackSizes[0]},\n        [FlipnoteAudioTrack.SE1]: {offset: offset += trackSizes[0], length: trackSizes[1]},\n        [FlipnoteAudioTrack.SE2]: {offset: offset += trackSizes[1], length: trackSizes[2]},\n        [FlipnoteAudioTrack.SE3]: {offset: offset += trackSizes[2], length: trackSizes[3]},\n        [FlipnoteAudioTrack.SE4]: {offset: offset += trackSizes[3], length: trackSizes[4]},\n      };\n    }\n  }\n\n  private getDiffingFlag(frameIndex: number) {\n    return ~(this.frameMeta[frameIndex].flags >> 4) & 0x07;\n  }\n\n  public getLayerDepths(frameIndex: number) {\n    return this.frameMeta[frameIndex].layerDepth;\n  }\n\n  // sort layer indices sorted by depth, from bottom to top\n  public getLayerOrder(frameIndex: number) {\n    const depths = this.getLayerDepths(frameIndex);\n    return [2, 1, 0].sort((a, b) => depths[b] - depths[a]);\n  }\n\n  public decodeFrame(frameIndex: number, diffingFlag: number=0x7, isPrevFrame: boolean=false) {\n    // if this frame is being decoded as a prev frame, then we only want to decode the layers necessary\n    if (isPrevFrame)\n      diffingFlag &= this.getDiffingFlag(frameIndex + 1);\n    // the prevDecodedFrame check is an optimisation for decoding frames in full sequence\n    if ((frameIndex !== 0) && (this.prevDecodedFrame !== frameIndex - 1) && (diffingFlag))\n      this.decodeFrame(frameIndex - 1, diffingFlag=diffingFlag, isPrevFrame=true);\n\n    const meta = this.frameMeta[frameIndex];\n    let offset = this.frameOffsets[frameIndex];\n\n    for (let layerIndex = 0; layerIndex < 3; layerIndex++) {\n      this.seek(offset);\n      const layerSize = meta.layerSize[layerIndex];\n      offset += layerSize;\n\n      // if the layer is 38 bytes then it hasn't changed at all since the previous frame, so we can skip it\n      if (layerSize === 38) continue;\n\n      if (((diffingFlag >> layerIndex) & 0x1) === 0) continue;\n\n      this.bitIndex = 16;\n      this.bitValue = 0;\n      let skip = 0;\n\n      for (let tileOffsetY = 0; tileOffsetY < KwzParser.height; tileOffsetY += 128) {\n        for (let tileOffsetX = 0; tileOffsetX < KwzParser.width; tileOffsetX += 128) {\n          for (let subTileOffsetY = 0; subTileOffsetY < 128; subTileOffsetY += 8) {\n            const y = tileOffsetY + subTileOffsetY;\n            if (y >= KwzParser.height) break;\n\n            for (let subTileOffsetX = 0; subTileOffsetX < 128; subTileOffsetX += 8) {\n              const x = tileOffsetX + subTileOffsetX;\n              if (x >= KwzParser.width) break;\n\n              if (skip) {\n                skip -= 1;\n                continue;\n              }\n\n              const pixelOffset = y * KwzParser.width + x;\n              const pixelBuffer = this.layers[layerIndex];\n\n              const type = this.readBits(3);\n\n              if (type == 0) {\n                const lineIndex = this.readBits(5);\n                const pixels = KWZ_LINE_TABLE_COMMON.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                pixelBuffer.set(pixels, pixelOffset);\n                pixelBuffer.set(pixels, pixelOffset + 320);\n                pixelBuffer.set(pixels, pixelOffset + 640);\n                pixelBuffer.set(pixels, pixelOffset + 960);\n                pixelBuffer.set(pixels, pixelOffset + 1280);\n                pixelBuffer.set(pixels, pixelOffset + 1600);\n                pixelBuffer.set(pixels, pixelOffset + 1920);\n                pixelBuffer.set(pixels, pixelOffset + 2240);\n              } \n\n              else if (type == 1) {\n                const lineIndex = this.readBits(13);\n                const pixels = KWZ_LINE_TABLE.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                pixelBuffer.set(pixels, pixelOffset);\n                pixelBuffer.set(pixels, pixelOffset + 320);\n                pixelBuffer.set(pixels, pixelOffset + 640);\n                pixelBuffer.set(pixels, pixelOffset + 960);\n                pixelBuffer.set(pixels, pixelOffset + 1280);\n                pixelBuffer.set(pixels, pixelOffset + 1600);\n                pixelBuffer.set(pixels, pixelOffset + 1920);\n                pixelBuffer.set(pixels, pixelOffset + 2240);\n              } \n              \n              else if (type == 2) {\n                const lineValue = this.readBits(5);\n                const a = KWZ_LINE_TABLE_COMMON.subarray(lineValue * 8, lineValue * 8 + 8);\n                const b = KWZ_LINE_TABLE_COMMON_SHIFT.subarray(lineValue * 8, lineValue * 8 + 8);\n                pixelBuffer.set(a, pixelOffset);\n                pixelBuffer.set(b, pixelOffset + 320);\n                pixelBuffer.set(a, pixelOffset + 640);\n                pixelBuffer.set(b, pixelOffset + 960);\n                pixelBuffer.set(a, pixelOffset + 1280);\n                pixelBuffer.set(b, pixelOffset + 1600);\n                pixelBuffer.set(a, pixelOffset + 1920);\n                pixelBuffer.set(b, pixelOffset + 2240);\n              } \n              \n              else if (type == 3) {\n                const lineValue = this.readBits(13);\n                const a = KWZ_LINE_TABLE.subarray(lineValue * 8, lineValue * 8 + 8);\n                const b = KWZ_LINE_TABLE_SHIFT.subarray(lineValue * 8, lineValue * 8 + 8);\n                pixelBuffer.set(a, pixelOffset);\n                pixelBuffer.set(b, pixelOffset + 320);\n                pixelBuffer.set(a, pixelOffset + 640);\n                pixelBuffer.set(b, pixelOffset + 960);\n                pixelBuffer.set(a, pixelOffset + 1280);\n                pixelBuffer.set(b, pixelOffset + 1600);\n                pixelBuffer.set(a, pixelOffset + 1920);\n                pixelBuffer.set(b, pixelOffset + 2240);\n              }\n\n              // most common tile type\n              else if (type == 4) {\n                const mask = this.readBits(8);\n                for (let line = 0; line < 8; line++) {\n                  if (mask & (1 << line)) {\n                    const lineIndex = this.readBits(5);\n                    const pixels = KWZ_LINE_TABLE_COMMON.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                    pixelBuffer.set(pixels, pixelOffset + line * 320);\n                  } else {\n                    const lineIndex = this.readBits(13);\n                    const pixels = KWZ_LINE_TABLE.subarray(lineIndex * 8, lineIndex * 8 + 8);\n                    pixelBuffer.set(pixels, pixelOffset + line * 320);\n                  }\n                }\n              }\n\n              else if (type == 5) {\n                skip = this.readBits(5);\n                continue;\n              }\n\n              // type 6 doesnt exist\n\n              else if (type == 7) {\n                let pattern = this.readBits(2);\n                let useCommonLines = this.readBits(1);\n\n                let a;\n                let b;\n\n                if (useCommonLines) {\n                  const lineIndexA = this.readBits(5);\n                  const lineIndexB = this.readBits(5);\n                  a = KWZ_LINE_TABLE_COMMON.subarray(lineIndexA * 8, lineIndexA * 8 + 8);\n                  b = KWZ_LINE_TABLE_COMMON.subarray(lineIndexB * 8, lineIndexB * 8 + 8);\n                  pattern = (pattern + 1) % 4;\n                } else {\n                  const lineIndexA = this.readBits(13);\n                  const lineIndexB = this.readBits(13);\n                  a = KWZ_LINE_TABLE.subarray(lineIndexA * 8, lineIndexA * 8 + 8);\n                  b = KWZ_LINE_TABLE.subarray(lineIndexB * 8, lineIndexB * 8 + 8);\n                }\n\n                if (pattern == 0) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(b, pixelOffset + 320);\n                  pixelBuffer.set(a, pixelOffset + 640);\n                  pixelBuffer.set(b, pixelOffset + 960);\n                  pixelBuffer.set(a, pixelOffset + 1280);\n                  pixelBuffer.set(b, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(b, pixelOffset + 2240);\n                } else if (pattern == 1) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(a, pixelOffset + 320);\n                  pixelBuffer.set(b, pixelOffset + 640);\n                  pixelBuffer.set(a, pixelOffset + 960);\n                  pixelBuffer.set(a, pixelOffset + 1280);\n                  pixelBuffer.set(b, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(a, pixelOffset + 2240);\n                } else if (pattern == 2) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(b, pixelOffset + 320);\n                  pixelBuffer.set(a, pixelOffset + 640);\n                  pixelBuffer.set(a, pixelOffset + 960);\n                  pixelBuffer.set(b, pixelOffset + 1280);\n                  pixelBuffer.set(a, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(b, pixelOffset + 2240);\n                } else if (pattern == 3) {\n                  pixelBuffer.set(a, pixelOffset);\n                  pixelBuffer.set(b, pixelOffset + 320);\n                  pixelBuffer.set(b, pixelOffset + 640);\n                  pixelBuffer.set(a, pixelOffset + 960);\n                  pixelBuffer.set(b, pixelOffset + 1280);\n                  pixelBuffer.set(b, pixelOffset + 1600);\n                  pixelBuffer.set(a, pixelOffset + 1920);\n                  pixelBuffer.set(b, pixelOffset + 2240);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.prevDecodedFrame = frameIndex;\n    // return this._layers;\n    return [\n      new Uint8Array(this.layers[0].buffer),\n      new Uint8Array(this.layers[1].buffer),\n      new Uint8Array(this.layers[2].buffer),\n    ];\n  }\n\n  public getFramePaletteIndices(frameIndex: number) {\n    const { flags } = this.frameMeta[frameIndex];\n    return [\n      flags & 0xF, // paper color\n      (flags >> 8) & 0xF, // layer A color 1\n      (flags >> 12) & 0xF, // layer A color 2\n      (flags >> 16) & 0xF, // layer B color 1\n      (flags >> 20) & 0xF, // layer B color 2\n      (flags >> 24) & 0xF, // layer C color 1\n      (flags >> 28) & 0xF, // layer C color 2\n    ];\n  }\n\n  public getFramePalette(frameIndex: number) {\n    const indices = this.getFramePaletteIndices(frameIndex);\n    return indices.map(colorIndex => this.globalPalette[colorIndex]);\n  }\n\n  // retuns an uint8 array where each item is a pixel's palette index\n  public getLayerPixels(frameIndex: number, layerIndex: number) {\n    if (this.prevDecodedFrame !== frameIndex) {\n      this.decodeFrame(frameIndex);\n    }\n    const palette = this.getFramePaletteIndices(frameIndex);\n    const layers = this.layers[layerIndex];\n    const image = new Uint8Array((KwzParser.width * KwzParser.height));\n    const paletteOffset = layerIndex * 2 + 1;\n    for (let pixelIndex = 0; pixelIndex < layers.length; pixelIndex++) {\n      let pixel = layers[pixelIndex];\n      if (pixel & 0xff00) {\n        image[pixelIndex] = palette[paletteOffset];\n      } else if (pixel & 0x00ff) {\n        image[pixelIndex] = palette[paletteOffset + 1];\n      }\n    }\n    return image;\n  }\n\n  // retuns an uint8 array where each item is a pixel's palette index\n  public getFramePixels(frameIndex: number) {\n    const palette = this.getFramePaletteIndices(frameIndex);\n    const image = new Uint8Array((KwzParser.width * KwzParser.height));\n    image.fill(palette[0]); // fill with paper color first\n    const layerOrder = this.getLayerOrder(frameIndex);\n    layerOrder.forEach(layerIndex => {\n      const layer = this.getLayerPixels(frameIndex, layerIndex);\n      // merge layer into image result\n      for (let pixelIndex = 0; pixelIndex < layer.length; pixelIndex++) {\n        const pixel = layer[pixelIndex];\n        if (pixel !== 0) {\n          image[pixelIndex] = pixel;\n        }\n      }\n    });\n    return image;\n  }\n  \n  public decodeSoundFlags() {\n    return this.frameMeta.map(frame => {\n      const soundFlags = frame.soundFlags;\n      return [\n        soundFlags & 0x1,\n        (soundFlags >> 1) & 0x1,\n        (soundFlags >> 2) & 0x1,\n        (soundFlags >> 3) & 0x1,\n      ];\n    });\n  }\n\n  public decodeAudio(trackId: FlipnoteAudioTrack) {\n    const trackMeta = this.soundMeta[trackId];\n    const adpcm = new Uint8Array(this.buffer, trackMeta.offset, trackMeta.length);\n    const output = new Int16Array(16364 * 60);\n    let outputOffset = 0;\n    // initial decoder state\n    let prevDiff = 0;\n    let prevStepIndex = 40;\n    let sample: number;\n    let diff: number;\n    let stepIndex: number;\n    // loop through each byte in the raw adpcm data\n    for (let adpcmOffset = 0; adpcmOffset < adpcm.length; adpcmOffset++) {\n      const byte = adpcm[adpcmOffset];\n      let bitPos = 0;\n      while (bitPos < 8) {\n        if (prevStepIndex < 18 || bitPos == 6) {\n          // isolate 2-bit sample\n          sample = (byte >> bitPos) & 0x3;\n          // get diff\n          diff = prevDiff + ADPCM_SAMPLE_TABLE_2[sample + 4 * prevStepIndex];\n          // get step index\n          stepIndex = prevStepIndex + ADPCM_INDEX_TABLE_2[sample];\n          bitPos += 2;\n        }\n        else {\n          // isolate 4-bit sample\n          sample = (byte >> bitPos) & 0xF;\n          // get diff\n          diff = prevDiff + ADPCM_SAMPLE_TABLE_4[sample + 16 * prevStepIndex];\n          // get step index\n          stepIndex = prevStepIndex + ADPCM_INDEX_TABLE_4[sample];\n          bitPos += 4;\n        }\n        // clamp step index and diff\n        stepIndex = Math.max(0, Math.min(stepIndex, 79));\n        diff = Math.max(-2048, Math.min(diff, 2048));\n        // add result to output buffer\n        output[outputOffset] = (diff * 16);\n        outputOffset += 1;\n        // set prev decoder state\n        prevStepIndex = stepIndex;\n        prevDiff = diff;\n      }\n\n    }\n    return output.slice(0, outputOffset);\n  }\n}","import { loadSource } from '../loaders/index';\nimport { FlipnoteParserBase } from './parserBase';\nimport { PpmParser, PpmMeta } from './ppm';\nimport { KwzParser, KwzMeta } from './kwz';\n\nexport * from './ppm';\nexport * from './kwz';\nexport * from './parserBase';\n\nexport type Flipnote = FlipnoteParserBase;\n\nexport type FlipnoteMeta = PpmMeta | KwzMeta; \n\nexport function parseSource(source: any): Promise<Flipnote> {\n  return loadSource(source)\n    .then((arrayBuffer: ArrayBuffer) => {\n      return new Promise((resolve, reject) => {\n        // check the buffer's magic to identify which format it uses\n        const magicBytes = new Uint8Array(arrayBuffer.slice(0, 4));\n        const magic = (magicBytes[0] << 24) | (magicBytes[1] << 16) | (magicBytes[2] << 8) | magicBytes[3];\n        if (magic === 0x50415241) { // check if magic is PARA (ppm magic)\n          resolve(new PpmParser(arrayBuffer));\n        } else if ((magic & 0xFFFFFF00) === 0x4B464800) { // check if magic is KFH (kwz magic)\n          resolve(new KwzParser(arrayBuffer));\n        } else {\n          reject();\n        }\n      });\n    });\n}","import { DataStream } from '../utils/index';\n\nexport class WavEncoder {\n\n  public sampleRate: number;\n  public channels: number;\n  public bitsPerSample: number;\n\n  private header: DataStream;\n  private pcmData: Int16Array;\n\n  constructor(sampleRate: number, channels=1, bitsPerSample=16) {\n    this.sampleRate = sampleRate;\n    this.channels = channels;\n    this.bitsPerSample = bitsPerSample;\n    // Write WAV file header\n    // Reference: http://www.topherlee.com/software/pcm-tut-wavformat.html\n    let headerBuffer = new ArrayBuffer(44);\n    let header = new DataStream(headerBuffer);\n    // 'RIFF' indent\n    header.writeUtf8('RIFF');\n    // filesize (set later)\n    header.writeUint32(0);\n    // 'WAVE' indent\n    header.writeUtf8('WAVE');\n    // 'fmt ' section header\n    header.writeUtf8('fmt ');\n    // fmt section length\n    header.writeUint32(16);\n    // specify audio format is pcm (type 1)\n    header.writeUint16(1);\n    // number of audio channels\n    header.writeUint16(this.channels);\n    // audio sample rate\n    header.writeUint32(this.sampleRate);\n    // byterate = (sampleRate * bitsPerSample * channelCount) / 8\n    header.writeUint32((this.sampleRate * this.bitsPerSample * this.channels) / 8);\n    // blockalign = (bitsPerSample * channels) / 8\n    header.writeUint16((this.bitsPerSample * this.channels) / 8);\n    // bits per sample\n    header.writeUint16(this.bitsPerSample);\n    // 'data' section header\n    header.writeUtf8('data');\n    // data section length (set later)\n    header.writeUint32(0);\n    this.header = header;\n    this.pcmData = null;\n  }\n\n  public writeFrames(pcmData: Int16Array) {\n    let header = this.header;\n    // fill in filesize\n    header.seek(4);\n    header.writeUint32(header.byteLength + pcmData.byteLength);\n    // fill in data section length\n    header.seek(40);\n    header.writeUint32(pcmData.byteLength);\n    this.pcmData = pcmData;\n  }\n\n  public getBlob() {\n    return new Blob([this.header.buffer, this.pcmData.buffer], {type: 'audio/wav'});\n  }\n}","import { WavEncoder } from '../encoders/wav';\n\nexport class AudioTrack {\n\n  public id: string;\n  public audio: HTMLAudioElement;\n  public playbackRate: number = 1;\n  public sampleRate: number;\n  public length: number;\n  public isActive: boolean;\n\n  private channelCount: number;\n  private bitsPerSample: number;\n  private url: string;\n\n  constructor (id: string) {\n    this.id = id;\n    this.channelCount = 1;\n    this.bitsPerSample = 16;\n    this.sampleRate = 0;\n    this.audio = document.createElement('audio');\n    this.audio.preload = 'auto';\n    this.isActive = false;\n  }\n\n  public set(pcmData: Int16Array, playbackRate: number): void {\n    // the HTML5 audio element supports PCM audio if it's in a WAV wrapper\n    const wav = new WavEncoder(this.sampleRate * playbackRate, this.channelCount, this.bitsPerSample);\n    wav.writeFrames(pcmData);\n    this.url = window.URL.createObjectURL(wav.getBlob());\n    // use the blob url for the audio element\n    this.audio.src = this.url;\n    this.isActive = true;\n    this.playbackRate = playbackRate;\n    this.length = pcmData.length;\n  }\n\n  get duration() {\n    return this.audio.duration;\n  }\n\n  public unset(): void {\n    if (this.isActive) {\n      window.URL.revokeObjectURL(this.url);\n      this.audio.src = '';\n      this.audio.load();\n      this.isActive = false;\n      this.playbackRate = 1;\n      this.length = null;\n    }\n  }\n\n  public start(offset = 0): void {\n    if (this.isActive) {\n      this.audio.currentTime = offset;\n      this.audio.play();\n    }\n  }\n\n  public stop(): void {\n    if (this.isActive) {\n      this.audio.pause();\n    }\n  }\n}","\nimport vertexShader from './shader.vert';\nimport fragmentShader from './shader.frag';\n\ninterface UniformMap {\n  [key : string]: WebGLUniformLocation;\n};\n\ninterface ResourceMap {\n  shaders: WebGLShader[],\n  textures: WebGLTexture[],\n  buffers: WebGLBuffer[]\n}\n\nexport enum TextureType {\n  Alpha = WebGLRenderingContext.ALPHA,\n  LuminanceAlpha = WebGLRenderingContext.LUMINANCE_ALPHA,\n};\n\n/** webgl canvas wrapper class */\nexport class WebglCanvas {\n\n  public width: number;\n  public height: number;\n  public el: HTMLCanvasElement;\n  public gl: WebGLRenderingContext;\n\n  private program: WebGLProgram;\n  private textureType: TextureType;\n  private uniforms: UniformMap = {};\n  private refs: ResourceMap = {\n    shaders: [],\n    textures: [],\n    buffers: []\n  };\n\n  constructor(el: HTMLCanvasElement, width=640, height=480, params={antialias: false, alpha: false}) {\n    const gl = <WebGLRenderingContext>el.getContext('webgl', params);\n    this.el = el;\n    this.gl = gl;\n    this.width = el.width = width;\n    this.height = el.height = height; \n    this.createProgram();\n    this.createScreenQuad();\n    this.createBitmapTexture();\n    this.setCanvasSize(this.width, this.height);\n    gl.enable(gl.BLEND);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  private createProgram() {\n    const gl = this.gl;\n    const program = gl.createProgram();\n    // set up shaders\n    gl.attachShader(program, this.createShader(gl.VERTEX_SHADER, vertexShader));\n    gl.attachShader(program, this.createShader(gl.FRAGMENT_SHADER, fragmentShader));\n    // link program\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      let log = gl.getProgramInfoLog(program);\n      gl.deleteProgram(program);\n      throw new Error(log);\n    }\n    // activate the program\n    gl.useProgram(program);\n    // map uniform locations\n    const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let index = 0; index < uniformCount; index++) {\n      const name = gl.getActiveUniform(program, index).name;\n      this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    this.program = program;\n  }\n\n  private createScreenQuad() {\n    const gl = this.gl;\n    // create quad that fills the screen, this will be our drawing surface\n    const vertBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1,  1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    this.refs.buffers.push(vertBuffer);\n  }\n\n  private createBitmapTexture() {\n    const gl = this.gl;\n    // create texture to use as the layer bitmap\n    gl.activeTexture(gl.TEXTURE0);\n    const tex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.uniform1i(this.uniforms['u_bitmap'], 0);\n    this.refs.textures.push(tex);\n  }\n\n  private createShader(type: number, source: string) {\n    const gl = this.gl;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    // test if shader compilation was successful\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      const log = gl.getShaderInfoLog(shader);\n      gl.deleteShader(shader);\n      throw new Error(log);\n    }\n    this.refs.shaders.push(shader);\n    return shader;\n  }\n\n  public setInputSize(width: number, height: number) {\n    this.gl.uniform2f(this.uniforms['u_textureSize'], width, height);\n  }\n\n  public setCanvasSize(width: number, height: number) {\n    this.gl.uniform2f(this.uniforms['u_screenSize'], width, height);\n    this.el.width = width;\n    this.el.height = height; \n    this.width = width;\n    this.height = height;\n    this.gl.viewport(0, 0, width, height);\n  }\n  \n  public setLayerType(textureType: TextureType) {\n    this.textureType = textureType;\n  }\n\n  public toImage(type?: string) {\n    return this.el.toDataURL(type);\n  }\n\n  public setColor(color: string, value: number[]) {\n    this.gl.uniform4f(this.uniforms[color], value[0]/255, value[1]/255, value[2]/255, 1);\n  }\n\n  public setPaperColor(value: number[]) {\n    this.gl.clearColor(value[0] / 255, value[1] / 255, value[2] / 255, 1);\n  }\n\n  public drawLayer(buffer: Uint8Array, width: number, height: number, color1: number[], color2: number[]) {\n    const gl = this.gl;\n    // gl.activeTexture(gl.TEXTURE0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.textureType, width, height, 0, this.textureType, gl.UNSIGNED_BYTE, buffer);\n    this.setColor('u_color1', color1);\n    this.setColor('u_color2', color2);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  public resize(width=640, height=480) {\n    this.setCanvasSize(width, height);\n  }\n\n  public clear() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  public destroy() {\n    // free resources\n    const refs = this.refs;\n    const gl = this.gl;\n    refs.shaders.forEach((shader) => {\n      gl.deleteShader(shader);\n    });\n    refs.shaders = [];\n    refs.textures.forEach((texture) => {\n      gl.deleteTexture(texture);\n    });\n    refs.textures = [];\n    refs.buffers.forEach((buffer) => {\n      gl.deleteBuffer(buffer);\n    });\n    refs.buffers = [];\n    gl.deleteProgram(this.program);\n    // shrink the canvas to reduce memory usage until it is garbage collected\n    gl.canvas.width = 1;\n    gl.canvas.height = 1;\n  }\n}","import { parseSource, Flipnote, FlipnoteMeta, FlipnoteAudioTrack } from '../parsers/index';\nimport { AudioTrack } from './audio';\nimport { WebglCanvas, TextureType } from '../webgl/index';\n\ninterface PlayerEvents {\n  [key: string]: Function[]\n}\n\ninterface PlayerLayerVisibility {\n  [key: number]: boolean;\n}\n\n/** flipnote player API, based on HTMLMediaElement (https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) */ \nexport class Player {\n\n  public canvas: WebglCanvas;\n  public el: HTMLCanvasElement;\n  public type: string;\n  public note: Flipnote;\n  public meta: FlipnoteMeta;\n  public loop: boolean = false;\n  public paused: boolean = true;\n  public duration: number = 0;\n  public layerVisibility: PlayerLayerVisibility;\n  \n  private isOpen: boolean = false;\n  private customPalette: {};\n  private events: PlayerEvents = {};\n  private audioTracks: AudioTrack[];\n  private seFlags: number[][];\n  private _frame: number = -1;\n  private _time: number = 0;\n  private hasPlaybackStarted: boolean = false;\n  private wasPlaying: boolean = false;\n  private isSeeking: boolean = false;\n\n  constructor(el: string | HTMLCanvasElement, width: number, height: number) {\n    // if `el` is a string, use it to select an Element, else assume it's an element\n    el = ('string' == typeof el) ? <HTMLCanvasElement>document.querySelector(el) : el;\n    this.canvas = new WebglCanvas(el, width, height);\n    this.el = this.canvas.el;\n    this.customPalette = null;\n    this.audioTracks = [\n      new AudioTrack('se1'),\n      new AudioTrack('se2'),\n      new AudioTrack('se3'),\n      new AudioTrack('se4'),\n      new AudioTrack('bgm'),\n    ];\n  }\n\n  get currentFrame() {\n    return this._frame;\n  }\n\n  set currentFrame(frameIndex) {\n    this.setFrame(frameIndex);\n  }\n\n  get currentTime() {\n    return this.isOpen ? this._time : null;\n  }\n\n  set currentTime(value) {\n    if ((this.isOpen) && (value <= this.duration) && (value >= 0)) {\n      this.setFrame(Math.round(value / (1 / this.framerate)));\n      this._time = value;\n      this.emit('progress', this.progress);\n    }\n  }\n\n  get progress() {\n    return this.isOpen ? (this.currentTime / this.duration) * 100 : 0;\n  }\n\n  set progress(value) {\n    this.currentTime = this.duration * (value / 100);\n  }\n\n  get volume() {\n    return this.audioTracks[3].audio.volume;\n  }\n\n  set volume(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.volume = value;\n    }\n  }\n\n  get muted() {\n    return this.audioTracks[3].audio.muted;\n  }\n\n  set muted(value) {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].audio.muted = value;\n    }\n  }\n\n  get framerate() {\n    return this.note.framerate;\n  }\n\n  get frameCount() {\n    return this.note.frameCount;\n  }\n\n  get frameSpeed() {\n    return this.note.frameSpeed;\n  }\n\n  get audiorate() {\n    return (1 / this.note.bgmrate) / (1 / this.note.framerate);\n  }\n\n  public async open(source: any) {\n    if (this.isOpen) this.close();\n    return parseSource(source)\n      .then((note: Flipnote) => {\n        this.load(note);\n      })\n      .catch((err: any) => {\n        this.emit('error', err);\n        console.error('Error loading Flipnote:', err);\n      });\n  }\n\n  public close(): void {\n    this.pause();\n    this.note = null;\n    this.isOpen = false;\n    this.paused = true;\n    this.loop = null;\n    this.meta = null;\n    this._frame = null;\n    this._time = null;\n    this.duration = null;\n    this.loop = null;\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].unset();\n    }\n    this.seFlags = null;\n    this.hasPlaybackStarted = null;\n    this.canvas.clear();\n  }\n\n  public load(note: Flipnote): void {\n    this.note = note;\n    this.meta = note.meta;\n    this.type = note.type;\n    this.loop = note.meta.loop;\n    this.duration = (this.note.frameCount) * (1 / this.note.framerate);\n    this.paused = true;\n    this.isOpen = true;\n    this.audioTracks.forEach(track => {\n      track.sampleRate = note.sampleRate;\n    });\n    if (this.customPalette) {\n      this.setPalette(this.customPalette);\n    }\n    const tracks = [FlipnoteAudioTrack.SE1, FlipnoteAudioTrack.SE2, FlipnoteAudioTrack.SE3, FlipnoteAudioTrack.SE4, FlipnoteAudioTrack.BGM];\n    tracks.forEach((trackId, trackIndex) => {\n      const trackRate = trackId === FlipnoteAudioTrack.BGM ? this.audiorate : 1;\n      if (this.note.hasAudioTrack(trackId))\n        this.audioTracks[trackIndex].set(this.note.decodeAudio(trackId), trackRate);\n    })\n    this.seFlags = this.note.decodeSoundFlags();\n    this.hasPlaybackStarted = false;\n    this.layerVisibility = {\n      1: true,\n      2: true,\n      3: true\n    };\n    this.canvas.setInputSize(note.width, note.height);\n    this.canvas.setLayerType(this.type === 'PPM' ? TextureType.Alpha : TextureType.LuminanceAlpha);\n    this.setFrame(this.note.thumbFrameIndex);\n    this._time = 0;\n    this.emit('load');\n  }\n\n  public play(): void {\n    if ((!this.isOpen) || (!this.paused)) return null;\n\n    if ((!this.hasPlaybackStarted) || ((!this.loop) && (this.currentFrame == this.frameCount - 1))) {\n      this._time = 0\n    }\n\n    this.paused = false;\n    this.playBgm();\n\n    let start = (performance.now() / 1000) - this.currentTime;\n\n    const loop = (timestamp: DOMHighResTimeStamp): void => {\n      if (this.paused) { // break loop if paused is set to true\n        this.stopAudio();\n        return null;\n      }\n      const time = timestamp / 1000;\n      const progress = time - start;\n      if (progress > this.duration) {\n        if (this.loop) {\n          this.currentTime = 0;\n          this.playBgm();\n          start = time;\n          this.emit('playback:loop');\n        } else {\n          this.pause();\n          this.emit('playback:end');\n        }\n      } else {\n        this.currentTime = progress;\n      }\n      requestAnimationFrame(loop);\n    }\n    requestAnimationFrame(loop);\n    this.hasPlaybackStarted = true;\n    this.emit('playback:start');\n  }\n\n  public pause(): void {\n    if ((!this.isOpen) || (this.paused)) return null;\n    this.paused = true;\n    this.stopAudio();\n    this.emit('playback:stop');\n  }\n\n  public setFrame(frameIndex: number): void {\n    if ((this.isOpen) && (frameIndex !== this.currentFrame)) {\n      // clamp frame index\n      frameIndex = Math.max(0, Math.min(Math.floor(frameIndex), this.frameCount - 1));\n      this.drawFrame(frameIndex);\n      this._frame = frameIndex;\n      if (this.paused) {\n        this._time = frameIndex * (1 / this.framerate);\n        this.emit('progress', this.progress);\n      } else {\n        this.playFrameSe(frameIndex);\n      }\n      this.emit('frame:update', this.currentFrame);\n    }\n  }\n\n  public nextFrame(): void {\n    if ((this.loop) && (this.currentFrame >= this.frameCount -1)) {\n      this.currentFrame = 0;\n    } else {\n      this.currentFrame += 1;\n    }\n  }\n\n  public prevFrame(): void {\n    if ((this.loop) && (this.currentFrame <= 0)) {\n      this.currentFrame = this.frameCount - 1;\n    } else {\n      this.currentFrame -= 1;\n    }\n  }\n\n  public lastFrame(): void {\n    this.currentFrame = this.frameCount - 1;\n  }\n\n  public firstFrame(): void {\n    this.currentFrame = 0;\n  }\n\n  public thumbnailFrame(): void {\n    this.currentFrame = this.note.thumbFrameIndex;\n  }\n\n  public startSeek(): void {\n    if (!this.isSeeking) {\n      this.wasPlaying = !this.paused;\n      this.pause();\n      this.isSeeking = true;\n    }\n  }\n\n  public seek(progress: number): void {\n    if (this.isSeeking) {\n      this.progress = progress;\n    }\n  }\n\n  public endSeek(): void {\n    if ((this.isSeeking) && (this.wasPlaying === true)) {\n      this.play();\n    }\n    this.wasPlaying = false;\n    this.isSeeking = false;\n  }\n\n  public drawFrame(frameIndex: number): void {\n    const width = this.note.width;\n    const height = this.note.height;\n    const colors = this.note.getFramePalette(frameIndex);\n    const layerBuffers = this.note.decodeFrame(frameIndex);\n    this.canvas.setPaperColor(colors[0]);\n    this.canvas.clear();\n    if (this.note.type === 'PPM') {\n      if (this.layerVisibility[2]) {\n        this.canvas.drawLayer(layerBuffers[1], width, height, colors[2], [0,0,0,0]);\n      }\n      if (this.layerVisibility[1]) {\n        this.canvas.drawLayer(layerBuffers[0], width, height, colors[1], [0,0,0,0]);\n      }\n    } else if (this.note.type === 'KWZ') {\n      // loop through each layer\n      this.note.getLayerOrder(frameIndex).forEach((layerIndex: number) => {\n        // only draw layer if it's visible\n        if (this.layerVisibility[layerIndex + 1]) {\n          this.canvas.drawLayer(layerBuffers[layerIndex], width, height, colors[layerIndex * 2 + 1], colors[layerIndex * 2 + 2]);\n        }\n      });\n    }\n  }\n\n  public forceUpdate(): void {\n    if (this.isOpen) {\n      this.drawFrame(this.currentFrame);\n    }\n  }\n\n  private playFrameSe(frameIndex: number): void {\n    var flags = this.seFlags[frameIndex];\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] && this.audioTracks[i].isActive) this.audioTracks[i].start();\n    }\n  }\n\n  private playBgm(): void {\n    this.audioTracks[4].start(this.currentTime);\n  }\n\n  private stopAudio(): void {\n    for (let i = 0; i < this.audioTracks.length; i++) {\n      this.audioTracks[i].stop();\n    }\n  }\n\n  public resize(width: number, height: number): void {\n    this.canvas.resize(width, height);\n    this.forceUpdate();\n  }\n\n  public setLayerVisibility(layerIndex: number, value: boolean): void {\n    this.layerVisibility[layerIndex] = value;\n    this.forceUpdate();\n  }\n\n  public setPalette(palette: any): void {\n    this.customPalette = palette;\n    this.note.palette = palette;\n    this.forceUpdate();\n  }\n\n  public on(eventType: string, callback: Function): void {\n    const events = this.events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  }\n\n  public off(eventType: string, callback: Function): void {\n    const callbackList = this.events[eventType];\n    if (callbackList) callbackList.splice(callbackList.indexOf(callback), 1);\n  }\n\n  public emit(eventType: string, ...args: any): void {\n    var callbackList = this.events[eventType] || [];\n    for (var i = 0; i < callbackList.length; i++) {\n      callbackList[i].apply(null, args); \n    }\n  }\n\n  public clearEvents(): void {\n    this.events = {};\n  }\n\n  public destroy(): void {\n    this.close();\n    this.canvas.destroy();\n  }\n\n}","import { ByteArray } from '../utils/byteArray';\n\n/*\n  LZWEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n  James Daniel (ES6/TS version)\n\n  Acknowledgements\n  GIFCOMPR.C - GIF Image compression routines\n  Lempel-Ziv compression based on 'compress'. GIF modifications by\n  David Rowley (mgardi@watdcsu.waterloo.edu)\n  GIF Image compression - modified 'compress'\n  Based on: compress.c - File compression ala IEEE Computer, June 1984.\n  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)\n  Jim McKie (decvax!mcvax!jim)\n  Steve Davies (decvax!vax135!petsd!peora!srd)\n  Ken Turkowski (decvax!decwrl!turtlevax!ken)\n  James A. Woods (decvax!ihnp4!ames!jaw)\n  Joe Orost (decvax!vax135!petsd!joe)\n*/\n\nconst EOF = -1;\nconst BITS = 12;\nconst HSIZE = 5003; // 80% occupancy\nconst masks = [\n  0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n  0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n  0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF\n];\n\nexport class LZWEncoder {\n  public width: number;\n  public height: number;\n  public pixels: Uint8Array;\n  public colorDepth: number;\n\n  private initCodeSize: number;\n  private accum = new Uint8Array(256);\n  private htab = new Int32Array(HSIZE);\n  private codetab = new Int32Array(HSIZE);\n  private cur_accum = 0;\n  private cur_bits = 0;\n  private n_bits: number;\n  private a_count: number;\n  private remaining: number;\n  private curPixel = 0;\n  private free_ent = 0; // first unused entry\n  private maxcode: number;\n  // block compression parameters -- after all codes are used up,\n  // and compression rate changes, start over.\n  private clear_flg: boolean = false;\n  // Algorithm: use open addressing double hashing (no chaining) on the\n  // prefix code / next character combination. We do a variant of Knuth's\n  // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n  // secondary probe. Here, the modular division first probe is gives way\n  // to a faster exclusive-or manipulation. Also do block compression with\n  // an adaptive reset, whereby the code table is cleared when the compression\n  // ratio decreases, but after the table fills. The variable-length output\n  // codes are re-sized at this point, and a special CLEAR code is generated\n  // for the decompressor. Late addition: construct the table according to\n  // file size for noticeable speed improvement on small files. Please direct\n  // questions about this implementation to ames!jaw.\n  private g_init_bits: number = undefined;\n  private ClearCode: number = undefined;\n  private EOFCode: number = undefined;\n\n  constructor(width: number, height: number, pixels: Uint8Array, colorDepth: number) {\n    this.width = width;\n    this.height = height;\n    this.pixels = pixels;\n    this.colorDepth = colorDepth;\n    this.initCodeSize = Math.max(2, this.colorDepth);\n    this.accum = new Uint8Array(256);\n    this.htab = new Int32Array(HSIZE);\n    this.codetab = new Int32Array(HSIZE);\n    this.cur_accum = 0;\n    this.cur_bits = 0;\n    this.a_count;\n    this.remaining;\n    this.curPixel = 0;\n    this.free_ent = 0; // first unused entry\n    this.maxcode;\n    // block compression parameters -- after all codes are used up,\n    // and compression rate changes, start over.\n    this.clear_flg = false;\n    // Algorithm: use open addressing double hashing (no chaining) on the\n    // prefix code / next character combination. We do a variant of Knuth's\n    // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n    // secondary probe. Here, the modular division first probe is gives way\n    // to a faster exclusive-or manipulation. Also do block compression with\n    // an adaptive reset, whereby the code table is cleared when the compression\n    // ratio decreases, but after the table fills. The variable-length output\n    // codes are re-sized at this point, and a special CLEAR code is generated\n    // for the decompressor. Late addition: construct the table according to\n    // file size for noticeable speed improvement on small files. Please direct\n    // questions about this implementation to ames!jaw.\n    this.g_init_bits = undefined;\n    this.ClearCode = undefined;\n    this.EOFCode = undefined;\n  }\n\n  // Add a character to the end of the current packet, and if it is 254\n  // characters, flush the packet to disk.\n  char_out(c: number, outs: ByteArray) {\n    this.accum[this.a_count++] = c;\n    if (this.a_count >= 254) this.flush_char(outs);\n  }\n\n  // Clear out the hash table\n  // table clear for block compress\n  cl_block(outs: ByteArray) {\n    this.cl_hash(HSIZE);\n    this.free_ent = this.ClearCode + 2;\n    this.clear_flg = true;\n    this.output(this.ClearCode, outs);\n  }\n\n  // Reset code table\n  cl_hash(hsize: number) {\n    for (var i = 0; i < hsize; ++i) this.htab[i] = -1;\n  }\n\n  compress(init_bits: number, outs: ByteArray) {\n    var fcode, c, i, ent, disp, hsize_reg, hshift;\n\n    // Set up the globals: this.g_init_bits - initial number of bits\n    this.g_init_bits = init_bits;\n\n    // Set up the necessary values\n    this.clear_flg = false;\n    this.n_bits = this.g_init_bits;\n    this.maxcode = this.get_maxcode(this.n_bits);\n\n    this.ClearCode = 1 << (init_bits - 1);\n    this.EOFCode = this.ClearCode + 1;\n    this.free_ent = this.ClearCode + 2;\n\n    this.a_count = 0; // clear packet\n\n    ent = this.nextPixel();\n\n    hshift = 0;\n    for (fcode = HSIZE; fcode < 65536; fcode *= 2) ++hshift;\n    hshift = 8 - hshift; // set hash code range bound\n    hsize_reg = HSIZE;\n    this.cl_hash(hsize_reg); // clear hash table\n\n    this.output(this.ClearCode, outs);\n\n    outer_loop: while ((c = this.nextPixel()) != EOF) {\n      fcode = (c << BITS) + ent;\n      i = (c << hshift) ^ ent; // xor hashing\n      if (this.htab[i] === fcode) {\n        ent = this.codetab[i];\n        continue;\n      } else if (this.htab[i] >= 0) { // non-empty slot\n        disp = hsize_reg - i; // secondary hash (after G. Knott)\n        if (i === 0) disp = 1;\n        do {\n          if ((i -= disp) < 0) i += hsize_reg;\n          if (this.htab[i] === fcode) {\n            ent = this.codetab[i];\n            continue outer_loop;\n          }\n        } while (this.htab[i] >= 0);\n      }\n      this.output(ent, outs);\n      ent = c;\n      if (this.free_ent < 1 << BITS) {\n        this.codetab[i] = this.free_ent++; // code -> hasthis.htable\n        this.htab[i] = fcode;\n      } else {\n        this.cl_block(outs);\n      }\n    }\n\n    // Put out the final code.\n    this.output(ent, outs);\n    this.output(this.EOFCode, outs);\n  }\n\n  encode(outs: ByteArray) {\n    outs.writeByte(this.initCodeSize); // write 'initial code size' byte\n    this.remaining = this.width * this.height; // reset navigation variables\n    this.curPixel = 0;\n    this.compress(this.initCodeSize + 1, outs); // compress and write the pixel data\n    outs.writeByte(0); // write block terminator\n  }\n\n  // Flush the packet to disk, and reset the this.accumulator\n  flush_char(outs: ByteArray) {\n    if (this.a_count > 0) {\n      outs.writeByte(this.a_count);\n      outs.writeBytes(this.accum, 0, this.a_count);\n      this.a_count = 0;\n    }\n  }\n\n  get_maxcode(n_bits: number) {\n    return (1 << n_bits) - 1;\n  }\n\n  // Return the next pixel from the image\n  nextPixel() {\n    if (this.remaining === 0) return EOF;\n    --this.remaining;\n    var pix = this.pixels[this.curPixel++];\n    return pix & 0xff;\n  }\n\n  output(code: number, outs: ByteArray) {\n    this.cur_accum &= masks[this.cur_bits];\n\n    if (this.cur_bits > 0) this.cur_accum |= (code << this.cur_bits);\n    else this.cur_accum = code;\n\n    this.cur_bits += this.n_bits;\n\n    while (this.cur_bits >= 8) {\n      this.char_out((this.cur_accum & 0xff), outs);\n      this.cur_accum >>= 8;\n      this.cur_bits -= 8;\n    }\n\n    // If the next entry is going to be too big for the code size,\n    // then increase it, if possible.\n    if (this.free_ent > this.maxcode || this.clear_flg) {\n      if (this.clear_flg) {\n        this.maxcode = this.get_maxcode(this.n_bits = this.g_init_bits);\n        this.clear_flg = false;\n      } else {\n        ++this.n_bits;\n        if (this.n_bits == BITS) this.maxcode = 1 << BITS;\n        else this.maxcode = this.get_maxcode(this.n_bits);\n      }\n    }\n\n    if (code == this.EOFCode) {\n      // At EOF, write the rest of the buffer.\n      while (this.cur_bits > 0) {\n        this.char_out((this.cur_accum & 0xff), outs);\n        this.cur_accum >>= 8;\n        this.cur_bits -= 8;\n      }\n      this.flush_char(outs);\n    }\n  }\n}\n","import { DataStream, ByteArray } from '../utils/index';\nimport { LZWEncoder } from './lzw';\nimport { Flipnote } from '../parsers/index';\n\nexport class GifEncoder {\n\n  public width: number;\n  public height: number;\n  public delay: number = 100;\n  // -1 = no repeat, 0 = forever. anything else is repeat count\n  public repeat: number = -1;\n  public colorDepth: number = 8;\n  public palette: number[][] = [];\n  public data: ByteArray;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.data = new ByteArray();\n  }\n\n  static fromFlipnote(flipnote: Flipnote) {\n    const gif = new GifEncoder(flipnote.width, flipnote.height);\n    gif.palette = flipnote.globalPalette;\n    gif.delay = 100 / flipnote.framerate\n    gif.repeat = flipnote.meta.loop ? -1 : 0;\n    gif.init();\n    for (let frameIndex = 0; frameIndex < flipnote.frameCount; frameIndex++) {\n      gif.writeFrame(flipnote.getFramePixels(frameIndex));\n    }\n    return gif;\n  }\n\n  static fromFlipnoteFrame(flipnote: Flipnote, frameIndex: number) {\n    const gif = new GifEncoder(flipnote.width, flipnote.height);\n    gif.palette = flipnote.globalPalette;\n    gif.delay = 100 / flipnote.framerate\n    gif.repeat = flipnote.meta.loop ? -1 : 0;\n    gif.init();\n    gif.writeFrame(flipnote.getFramePixels(frameIndex));\n    return gif;\n  }\n\n  init() {\n    const paletteSize = this.palette.length;\n    for (var p = 1; 1 << p < paletteSize; p += 1) {\n      continue;\n    }\n    this.colorDepth = p;\n    this.writeHeader();\n    this.writeColorTable();\n    this.writeNetscapeExt();\n  }\n\n  writeHeader() {\n    const header = new DataStream(new ArrayBuffer(13));\n    header.writeUtf8('GIF89a');\n    // Logical Screen Descriptor\n    header.writeUint16(this.width);\n    header.writeUint16(this.height);\n    header.writeUint8(\n      0x80 | // 1 : global color table flag = 1 (gct used)\n      (this.colorDepth - 1) // 6-8 : gct size\n    );\n    header.writeUint8(0);\n    header.writeUint8(0);\n    this.data.writeBytes(new Uint8Array(header.buffer));\n  }\n\n  writeColorTable() {\n    const palette = new Uint8Array(3 * Math.pow(2, this.colorDepth));\n    for(let index = 0, offset = 0; index < this.palette.length; index += 1, offset += 3) {\n      palette.set(this.palette[index], offset);\n    }\n    this.data.writeBytes(palette);\n  }\n\n  writeGraphicsControlExt() {\n    const graphicsControlExt = new DataStream(new ArrayBuffer(8));\n    graphicsControlExt.writeBytes([\n      0x21, // extension introducer\n      0xF9, // graphic control label\n      4, // block size\n      0 // bitfield\n    ]);\n    graphicsControlExt.writeUint16(this.delay); // loop flag\n    graphicsControlExt.writeBytes([\n      0,\n      0\n    ]);\n    this.data.writeBytes(new Uint8Array(graphicsControlExt.buffer));\n  }\n\n  writeNetscapeExt() {\n    const netscapeExt = new DataStream(new ArrayBuffer(19));\n    netscapeExt.writeBytes([\n      0x21, // extension introducer\n      0xFF, // app extension label\n      11, // block size\n    ]);\n    netscapeExt.writeUtf8('NETSCAPE2.0');\n    netscapeExt.writeUint8(3); // subblock size\n    netscapeExt.writeUint8(1); // loop subblock id\n    netscapeExt.writeUint16(this.repeat); // loop flag\n    this.data.writeBytes(new Uint8Array(netscapeExt.buffer));\n  }\n\n  writeImageDesc() {\n    const desc = new DataStream(new ArrayBuffer(10));\n    desc.writeUint8(0x2C);\n    desc.writeUint16(0); // image left\n    desc.writeUint16(0); // image top\n    desc.writeUint16(this.width);\n    desc.writeUint16(this.height);\n    desc.writeUint8(0);\n    this.data.writeBytes(new Uint8Array(desc.buffer));\n  }\n\n  writePixels(pixels: Uint8Array) {\n    const lzw = new LZWEncoder(this.width, this.height, pixels, this.colorDepth);\n    lzw.encode(this.data);\n  }\n\n  writeFrame(pixels: Uint8Array) {\n    this.writeGraphicsControlExt();\n    this.writeImageDesc();\n    this.writePixels(pixels);\n  }\n\n  getBuffer() {\n    return this.data.getBuffer();\n  }\n\n  getBlob() {\n    return new Blob([this.getBuffer()], {type: 'image/gif'})\n  }\n\n  getUrl() {\n    return window.URL.createObjectURL(this.getBlob());\n  }\n\n  getImage() {\n    const img = new Image(this.width, this.height);\n    img.src = this.getUrl();\n    return img;\n  }\n}","import * as utils from './utils/index';\nimport { parseSource, KwzParser, PpmParser } from './parsers/index'; \nimport { Player } from './player/index';\nimport { GifEncoder, WavEncoder } from './encoders/index';\n// bitmap encoder is deprecated in favor of gif\n// import { BitmapEncoder } from './encoders';\n\nexport default {\n  version: VERSION,\n  player: Player,\n  parseSource,\n  kwzParser: KwzParser,\n  ppmParser: PpmParser,\n  // bitmapEncoder: BitmapEncoder,\n  gifEncoder: GifEncoder,\n  wavEncoder: WavEncoder,\n  utils,\n}"],"names":["tslib_1.__extends","FRAMERATES","PALETTE"],"mappings":"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"}